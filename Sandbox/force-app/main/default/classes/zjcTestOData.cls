global class zjcTestOData extends overcast.Realtime.ScenarioExtension implements overcast.Realtime.Updatable {
/* 
 * Generated by Overcast UTC 2021-11-18 03:50:17Z.
 * This class belongs to the zjcTestOData Real-time Integration Scenario.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */
    public class zjcTestODataException extends Exception {
        private List<String> messages;
        public List<String> getMessages() {
            return messages;
        }
        public void setMessages(List<String> messages) {
            this.messages = messages;
        }
    }
    global zjcTestOData() {
        this.A_BusinessPartner = new list<zjcTestOData.A_BusinessPartner>();
        this.A_BuPaIdentification = new list<zjcTestOData.A_BuPaIdentification>();
        this.A_BuPaIndustry = new list<zjcTestOData.A_BuPaIndustry>();
        this.A_BusinessPartnerAddress = new list<zjcTestOData.A_BusinessPartnerAddress>();
        this.A_BuPaAddressUsage = new list<zjcTestOData.A_BuPaAddressUsage>();
        this.A_AddressEmailAddress = new list<zjcTestOData.A_AddressEmailAddress>();
        this.A_AddressFaxNumber = new list<zjcTestOData.A_AddressFaxNumber>();
        this.A_AddressPhoneNumber = new list<zjcTestOData.A_AddressPhoneNumber>();
        this.A_AddressHomePageURL = new list<zjcTestOData.A_AddressHomePageURL>();
        this.A_BusinessPartnerBank = new list<zjcTestOData.A_BusinessPartnerBank>();
        this.A_BusinessPartnerContact = new list<zjcTestOData.A_BusinessPartnerContact>();
        this.A_BPContactToAddress = new list<zjcTestOData.A_BPContactToAddress>();
        this.A_BPContactToFuncAndDept = new list<zjcTestOData.A_BPContactToFuncAndDept>();
        this.A_BusinessPartnerRole = new list<zjcTestOData.A_BusinessPartnerRole>();
        this.A_BusinessPartnerTaxNumber = new list<zjcTestOData.A_BusinessPartnerTaxNumber>();
        this.A_Customer = new list<zjcTestOData.A_Customer>();
        this.A_CustomerCompany = new list<zjcTestOData.A_CustomerCompany>();
        this.A_CustomerCompanyText = new list<zjcTestOData.A_CustomerCompanyText>();
        this.A_CustomerDunning = new list<zjcTestOData.A_CustomerDunning>();
        this.A_CustomerWithHoldingTax = new list<zjcTestOData.A_CustomerWithHoldingTax>();
        this.A_CustomerSalesArea = new list<zjcTestOData.A_CustomerSalesArea>();
        this.A_CustSalesPartnerFunc = new list<zjcTestOData.A_CustSalesPartnerFunc>();
        this.A_CustomerSalesAreaTax = new list<zjcTestOData.A_CustomerSalesAreaTax>();
        this.A_CustomerSalesAreaText = new list<zjcTestOData.A_CustomerSalesAreaText>();
        this.A_CustomerTaxGrouping = new list<zjcTestOData.A_CustomerTaxGrouping>();
        this.A_CustomerText = new list<zjcTestOData.A_CustomerText>();
        this.A_Supplier = new list<zjcTestOData.A_Supplier>();
        this.A_SupplierCompany = new list<zjcTestOData.A_SupplierCompany>();
        this.A_SupplierCompanyText = new list<zjcTestOData.A_SupplierCompanyText>();
        this.A_SupplierDunning = new list<zjcTestOData.A_SupplierDunning>();
        this.A_SupplierWithHoldingTax = new list<zjcTestOData.A_SupplierWithHoldingTax>();
        this.A_SupplierPurchasingOrg = new list<zjcTestOData.A_SupplierPurchasingOrg>();
        this.A_SupplierPartnerFunc = new list<zjcTestOData.A_SupplierPartnerFunc>();
        this.A_SupplierPurchasingOrgText = new list<zjcTestOData.A_SupplierPurchasingOrgText>();
        this.A_SupplierText = new list<zjcTestOData.A_SupplierText>();
    }

    public class A_BusinessPartner {
        @AuraEnabled public String BusinessPartner { get; set; }
        @AuraEnabled public String Customer { get; set; }
        @AuraEnabled public String Supplier { get; set; }
        @AuraEnabled public String AcademicTitle { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        @AuraEnabled public String BusinessPartnerCategory { get; set; }
        @AuraEnabled public String BusinessPartnerFullName { get; set; }
        @AuraEnabled public String BusinessPartnerGrouping { get; set; }
        @AuraEnabled public String BusinessPartnerName { get; set; }
        @AuraEnabled public String BusinessPartnerUUID { get; set; }
        @AuraEnabled public String CorrespondenceLanguage { get; set; }
        @AuraEnabled public String CreatedByUser { get; set; }
        @AuraEnabled public Datetime CreationDate { get; set; }
        @AuraEnabled public Time CreationTime { get; set; }
        @AuraEnabled public String FirstName { get; set; }
        @AuraEnabled public String FormOfAddress { get; set; }
        @AuraEnabled public String Industry { get; set; }
        @AuraEnabled public String InternationalLocationNumber1 { get; set; }
        @AuraEnabled public String InternationalLocationNumber2 { get; set; }
        @AuraEnabled public Boolean IsFemale { get; set; }
        @AuraEnabled public Boolean IsMale { get; set; }
        @AuraEnabled public String IsNaturalPerson { get; set; }
        @AuraEnabled public Boolean IsSexUnknown { get; set; }
        @AuraEnabled public String GenderCodeName { get; set; }
        @AuraEnabled public String Language { get; set; }
        @AuraEnabled public Datetime LastChangeDate { get; set; }
        @AuraEnabled public Time LastChangeTime { get; set; }
        @AuraEnabled public String LastChangedByUser { get; set; }
        @AuraEnabled public String LastName { get; set; }
        @AuraEnabled public String LegalForm { get; set; }
        @AuraEnabled public String OrganizationBPName1 { get; set; }
        @AuraEnabled public String OrganizationBPName2 { get; set; }
        @AuraEnabled public String OrganizationBPName3 { get; set; }
        @AuraEnabled public String OrganizationBPName4 { get; set; }
        @AuraEnabled public Datetime OrganizationFoundationDate { get; set; }
        @AuraEnabled public Datetime OrganizationLiquidationDate { get; set; }
        @AuraEnabled public String SearchTerm1 { get; set; }
        @AuraEnabled public String SearchTerm2 { get; set; }
        @AuraEnabled public String AdditionalLastName { get; set; }
        @AuraEnabled public Datetime BirthDate { get; set; }
        @AuraEnabled public String BusinessPartnerBirthDateStatus { get; set; }
        @AuraEnabled public String BusinessPartnerBirthplaceName { get; set; }
        @AuraEnabled public Boolean BusinessPartnerIsBlocked { get; set; }
        @AuraEnabled public String BusinessPartnerType { get; set; }
        @AuraEnabled public String ETag { get; set; }
        @AuraEnabled public String GroupBusinessPartnerName1 { get; set; }
        @AuraEnabled public String GroupBusinessPartnerName2 { get; set; }
        @AuraEnabled public String IndependentAddressID { get; set; }
        @AuraEnabled public String InternationalLocationNumber3 { get; set; }
        @AuraEnabled public String MiddleName { get; set; }
        @AuraEnabled public String NameCountry { get; set; }
        @AuraEnabled public String NameFormat { get; set; }
        @AuraEnabled public String PersonFullName { get; set; }
        @AuraEnabled public String PersonNumber { get; set; }
        @AuraEnabled public Boolean IsMarkedForArchiving { get; set; }
        @AuraEnabled public String BusinessPartnerIDByExtSystem { get; set; }
        @AuraEnabled public String TradingPartner { get; set; }
        /**
        * Navigation property to A_BuPaIdentification.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_BuPaIdentification { get; set; }
        /**
        * Navigation property to A_BuPaIndustry.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_BuPaIndustry { get; set; }
        /**
        * Navigation property to A_BusinessPartnerAddress.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_BusinessPartnerAddress { get; set; }
        /**
        * Navigation property to A_BusinessPartnerBank.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_BusinessPartnerBank { get; set; }
        /**
        * Navigation property to A_BusinessPartnerContact.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_BusinessPartnerContact { get; set; }
        /**
        * Navigation property to A_BusinessPartnerRole.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_BusinessPartnerRole { get; set; }
        /**
        * Navigation property to A_BusinessPartnerTaxNumber.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_BusinessPartnerTax { get; set; }
        /**
        * Navigation property to A_Customer.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_Customer { get; set; }
        /**
        * Navigation property to A_Supplier.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_Supplier { get; set; }

        public A_BusinessPartner() {}

        public A_BusinessPartner(String pBusinessPartner, String pCustomer, String pSupplier, String pAcademicTitle, String pAuthorizationGroup, String pBusinessPartnerCategory, String pBusinessPartnerFullName, String pBusinessPartnerGrouping, String pBusinessPartnerName, String pBusinessPartnerUUID, String pCorrespondenceLanguage, String pCreatedByUser, Datetime pCreationDate, Time pCreationTime, String pFirstName, String pFormOfAddress, String pIndustry, String pInternationalLocationNumber1, String pInternationalLocationNumber2, Boolean pIsFemale, Boolean pIsMale, String pIsNaturalPerson, Boolean pIsSexUnknown, String pGenderCodeName, String pLanguage, Datetime pLastChangeDate, Time pLastChangeTime, String pLastChangedByUser, String pLastName, String pLegalForm, String pOrganizationBPName1, String pOrganizationBPName2) {
            this.BusinessPartner = pBusinessPartner;
            this.Customer = pCustomer;
            this.Supplier = pSupplier;
            this.AcademicTitle = pAcademicTitle;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.BusinessPartnerCategory = pBusinessPartnerCategory;
            this.BusinessPartnerFullName = pBusinessPartnerFullName;
            this.BusinessPartnerGrouping = pBusinessPartnerGrouping;
            this.BusinessPartnerName = pBusinessPartnerName;
            this.BusinessPartnerUUID = pBusinessPartnerUUID;
            this.CorrespondenceLanguage = pCorrespondenceLanguage;
            this.CreatedByUser = pCreatedByUser;
            this.CreationDate = pCreationDate;
            this.CreationTime = pCreationTime;
            this.FirstName = pFirstName;
            this.FormOfAddress = pFormOfAddress;
            this.Industry = pIndustry;
            this.InternationalLocationNumber1 = pInternationalLocationNumber1;
            this.InternationalLocationNumber2 = pInternationalLocationNumber2;
            this.IsFemale = pIsFemale;
            this.IsMale = pIsMale;
            this.IsNaturalPerson = pIsNaturalPerson;
            this.IsSexUnknown = pIsSexUnknown;
            this.GenderCodeName = pGenderCodeName;
            this.Language = pLanguage;
            this.LastChangeDate = pLastChangeDate;
            this.LastChangeTime = pLastChangeTime;
            this.LastChangedByUser = pLastChangedByUser;
            this.LastName = pLastName;
            this.LegalForm = pLegalForm;
            this.OrganizationBPName1 = pOrganizationBPName1;
            this.OrganizationBPName2 = pOrganizationBPName2;
        }
    }

    public class A_BuPaIdentification {
        @AuraEnabled public String BusinessPartner { get; set; }
        @AuraEnabled public String BPIdentificationType { get; set; }
        @AuraEnabled public String BPIdentificationNumber { get; set; }
        @AuraEnabled public String BPIdnNmbrIssuingInstitute { get; set; }
        @AuraEnabled public Datetime BPIdentificationEntryDate { get; set; }
        @AuraEnabled public String Country { get; set; }
        @AuraEnabled public String Region { get; set; }
        @AuraEnabled public Datetime ValidityStartDate { get; set; }
        @AuraEnabled public Datetime ValidityEndDate { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_BuPaIdentification() {}

        public A_BuPaIdentification(String pBusinessPartner, String pBPIdentificationType, String pBPIdentificationNumber, String pBPIdnNmbrIssuingInstitute, Datetime pBPIdentificationEntryDate, String pCountry, String pRegion, Datetime pValidityStartDate, Datetime pValidityEndDate, String pAuthorizationGroup, String pOVC_FKEY) {
            this.BusinessPartner = pBusinessPartner;
            this.BPIdentificationType = pBPIdentificationType;
            this.BPIdentificationNumber = pBPIdentificationNumber;
            this.BPIdnNmbrIssuingInstitute = pBPIdnNmbrIssuingInstitute;
            this.BPIdentificationEntryDate = pBPIdentificationEntryDate;
            this.Country = pCountry;
            this.Region = pRegion;
            this.ValidityStartDate = pValidityStartDate;
            this.ValidityEndDate = pValidityEndDate;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_BuPaIndustry {
        @AuraEnabled public String IndustrySector { get; set; }
        @AuraEnabled public String IndustrySystemType { get; set; }
        @AuraEnabled public String BusinessPartner { get; set; }
        @AuraEnabled public String IsStandardIndustry { get; set; }
        @AuraEnabled public String IndustryKeyDescription { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_BuPaIndustry() {}

        public A_BuPaIndustry(String pIndustrySector, String pIndustrySystemType, String pBusinessPartner, String pIsStandardIndustry, String pIndustryKeyDescription, String pOVC_FKEY) {
            this.IndustrySector = pIndustrySector;
            this.IndustrySystemType = pIndustrySystemType;
            this.BusinessPartner = pBusinessPartner;
            this.IsStandardIndustry = pIsStandardIndustry;
            this.IndustryKeyDescription = pIndustryKeyDescription;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_BusinessPartnerAddress {
        @AuraEnabled public String BusinessPartner { get; set; }
        @AuraEnabled public String AddressID { get; set; }
        @AuraEnabled public Datetime ValidityStartDate { get; set; }
        @AuraEnabled public Datetime ValidityEndDate { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        @AuraEnabled public String AddressUUID { get; set; }
        @AuraEnabled public String AdditionalStreetPrefixName { get; set; }
        @AuraEnabled public String AdditionalStreetSuffixName { get; set; }
        @AuraEnabled public String AddressTimeZone { get; set; }
        @AuraEnabled public String CareOfName { get; set; }
        @AuraEnabled public String CityCode { get; set; }
        @AuraEnabled public String CityName { get; set; }
        @AuraEnabled public String CompanyPostalCode { get; set; }
        @AuraEnabled public String Country { get; set; }
        @AuraEnabled public String County { get; set; }
        @AuraEnabled public String DeliveryServiceNumber { get; set; }
        @AuraEnabled public String DeliveryServiceTypeCode { get; set; }
        @AuraEnabled public String District { get; set; }
        @AuraEnabled public String FormOfAddress { get; set; }
        @AuraEnabled public String FullName { get; set; }
        @AuraEnabled public String HomeCityName { get; set; }
        @AuraEnabled public String HouseNumber { get; set; }
        @AuraEnabled public String HouseNumberSupplementText { get; set; }
        @AuraEnabled public String Language { get; set; }
        @AuraEnabled public String POBox { get; set; }
        @AuraEnabled public String POBoxDeviatingCityName { get; set; }
        @AuraEnabled public String POBoxDeviatingCountry { get; set; }
        @AuraEnabled public String POBoxDeviatingRegion { get; set; }
        @AuraEnabled public Boolean POBoxIsWithoutNumber { get; set; }
        @AuraEnabled public String POBoxLobbyName { get; set; }
        @AuraEnabled public String POBoxPostalCode { get; set; }
        @AuraEnabled public String Person { get; set; }
        @AuraEnabled public String PostalCode { get; set; }
        @AuraEnabled public String PrfrdCommMediumType { get; set; }
        @AuraEnabled public String Region { get; set; }
        @AuraEnabled public String StreetName { get; set; }
        @AuraEnabled public String StreetPrefixName { get; set; }
        @AuraEnabled public String StreetSuffixName { get; set; }
        @AuraEnabled public String TaxJurisdiction { get; set; }
        @AuraEnabled public String TransportZone { get; set; }
        @AuraEnabled public String AddressIDByExternalSystem { get; set; }
        @AuraEnabled public String CountyCode { get; set; }
        @AuraEnabled public String TownshipCode { get; set; }
        @AuraEnabled public String TownshipName { get; set; }
        /**
        * Navigation property to A_BuPaAddressUsage.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_AddressUsage { get; set; }
        /**
        * Navigation property to A_AddressEmailAddress.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_EmailAddress { get; set; }
        /**
        * Navigation property to A_AddressFaxNumber.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_FaxNumber { get; set; }
        /**
        * Navigation property to A_AddressPhoneNumber.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_MobilePhoneNumber { get; set; }
        /**
        * Navigation property to A_AddressPhoneNumber.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_PhoneNumber { get; set; }
        /**
        * Navigation property to A_AddressHomePageURL.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_URLAddress { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_BusinessPartnerAddress() {}

        public A_BusinessPartnerAddress(String pBusinessPartner, String pAddressID, Datetime pValidityStartDate, Datetime pValidityEndDate, String pAuthorizationGroup, String pAddressUUID, String pAdditionalStreetPrefixName, String pAdditionalStreetSuffixName, String pAddressTimeZone, String pCareOfName, String pCityCode, String pCityName, String pCompanyPostalCode, String pCountry, String pCounty, String pDeliveryServiceNumber, String pDeliveryServiceTypeCode, String pDistrict, String pFormOfAddress, String pFullName, String pHomeCityName, String pHouseNumber, String pHouseNumberSupplementText, String pLanguage, String pPOBox, String pPOBoxDeviatingCityName, String pPOBoxDeviatingCountry, String pPOBoxDeviatingRegion, Boolean pPOBoxIsWithoutNumber, String pPOBoxLobbyName, String pPOBoxPostalCode, String pPerson) {
            this.BusinessPartner = pBusinessPartner;
            this.AddressID = pAddressID;
            this.ValidityStartDate = pValidityStartDate;
            this.ValidityEndDate = pValidityEndDate;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.AddressUUID = pAddressUUID;
            this.AdditionalStreetPrefixName = pAdditionalStreetPrefixName;
            this.AdditionalStreetSuffixName = pAdditionalStreetSuffixName;
            this.AddressTimeZone = pAddressTimeZone;
            this.CareOfName = pCareOfName;
            this.CityCode = pCityCode;
            this.CityName = pCityName;
            this.CompanyPostalCode = pCompanyPostalCode;
            this.Country = pCountry;
            this.County = pCounty;
            this.DeliveryServiceNumber = pDeliveryServiceNumber;
            this.DeliveryServiceTypeCode = pDeliveryServiceTypeCode;
            this.District = pDistrict;
            this.FormOfAddress = pFormOfAddress;
            this.FullName = pFullName;
            this.HomeCityName = pHomeCityName;
            this.HouseNumber = pHouseNumber;
            this.HouseNumberSupplementText = pHouseNumberSupplementText;
            this.Language = pLanguage;
            this.POBox = pPOBox;
            this.POBoxDeviatingCityName = pPOBoxDeviatingCityName;
            this.POBoxDeviatingCountry = pPOBoxDeviatingCountry;
            this.POBoxDeviatingRegion = pPOBoxDeviatingRegion;
            this.POBoxIsWithoutNumber = pPOBoxIsWithoutNumber;
            this.POBoxLobbyName = pPOBoxLobbyName;
            this.POBoxPostalCode = pPOBoxPostalCode;
            this.Person = pPerson;
        }
    }

    public class A_BuPaAddressUsage {
        @AuraEnabled public String BusinessPartner { get; set; }
        @AuraEnabled public Datetime ValidityEndDate { get; set; }
        @AuraEnabled public String AddressUsage { get; set; }
        @AuraEnabled public String AddressID { get; set; }
        @AuraEnabled public Datetime ValidityStartDate { get; set; }
        @AuraEnabled public Boolean StandardUsage { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_BuPaAddressUsage() {}

        public A_BuPaAddressUsage(String pBusinessPartner, Datetime pValidityEndDate, String pAddressUsage, String pAddressID, Datetime pValidityStartDate, Boolean pStandardUsage, String pAuthorizationGroup, String pOVC_FKEY) {
            this.BusinessPartner = pBusinessPartner;
            this.ValidityEndDate = pValidityEndDate;
            this.AddressUsage = pAddressUsage;
            this.AddressID = pAddressID;
            this.ValidityStartDate = pValidityStartDate;
            this.StandardUsage = pStandardUsage;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_AddressEmailAddress {
        @AuraEnabled public String AddressID { get; set; }
        @AuraEnabled public String Person { get; set; }
        @AuraEnabled public String OrdinalNumber { get; set; }
        @AuraEnabled public Boolean IsDefaultEmailAddress { get; set; }
        @AuraEnabled public String EmailAddress { get; set; }
        @AuraEnabled public String SearchEmailAddress { get; set; }
        @AuraEnabled public String AddressCommunicationRemarkText { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_AddressEmailAddress() {}

        public A_AddressEmailAddress(String pAddressID, String pPerson, String pOrdinalNumber, Boolean pIsDefaultEmailAddress, String pEmailAddress, String pSearchEmailAddress, String pAddressCommunicationRemarkText, String pOVC_FKEY) {
            this.AddressID = pAddressID;
            this.Person = pPerson;
            this.OrdinalNumber = pOrdinalNumber;
            this.IsDefaultEmailAddress = pIsDefaultEmailAddress;
            this.EmailAddress = pEmailAddress;
            this.SearchEmailAddress = pSearchEmailAddress;
            this.AddressCommunicationRemarkText = pAddressCommunicationRemarkText;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_AddressFaxNumber {
        @AuraEnabled public String AddressID { get; set; }
        @AuraEnabled public String Person { get; set; }
        @AuraEnabled public String OrdinalNumber { get; set; }
        @AuraEnabled public Boolean IsDefaultFaxNumber { get; set; }
        @AuraEnabled public String FaxCountry { get; set; }
        @AuraEnabled public String FaxNumber { get; set; }
        @AuraEnabled public String FaxNumberExtension { get; set; }
        @AuraEnabled public String InternationalFaxNumber { get; set; }
        @AuraEnabled public String AddressCommunicationRemarkText { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_AddressFaxNumber() {}

        public A_AddressFaxNumber(String pAddressID, String pPerson, String pOrdinalNumber, Boolean pIsDefaultFaxNumber, String pFaxCountry, String pFaxNumber, String pFaxNumberExtension, String pInternationalFaxNumber, String pAddressCommunicationRemarkText, String pOVC_FKEY) {
            this.AddressID = pAddressID;
            this.Person = pPerson;
            this.OrdinalNumber = pOrdinalNumber;
            this.IsDefaultFaxNumber = pIsDefaultFaxNumber;
            this.FaxCountry = pFaxCountry;
            this.FaxNumber = pFaxNumber;
            this.FaxNumberExtension = pFaxNumberExtension;
            this.InternationalFaxNumber = pInternationalFaxNumber;
            this.AddressCommunicationRemarkText = pAddressCommunicationRemarkText;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_AddressPhoneNumber {
        @AuraEnabled public String AddressID { get; set; }
        @AuraEnabled public String Person { get; set; }
        @AuraEnabled public String OrdinalNumber { get; set; }
        @AuraEnabled public String DestinationLocationCountry { get; set; }
        @AuraEnabled public Boolean IsDefaultPhoneNumber { get; set; }
        @AuraEnabled public String PhoneNumber { get; set; }
        @AuraEnabled public String PhoneNumberExtension { get; set; }
        @AuraEnabled public String InternationalPhoneNumber { get; set; }
        @AuraEnabled public String PhoneNumberType { get; set; }
        @AuraEnabled public String AddressCommunicationRemarkText { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_AddressPhoneNumber() {}

        public A_AddressPhoneNumber(String pAddressID, String pPerson, String pOrdinalNumber, String pDestinationLocationCountry, Boolean pIsDefaultPhoneNumber, String pPhoneNumber, String pPhoneNumberExtension, String pInternationalPhoneNumber, String pPhoneNumberType, String pAddressCommunicationRemarkText, String pOVC_FKEY) {
            this.AddressID = pAddressID;
            this.Person = pPerson;
            this.OrdinalNumber = pOrdinalNumber;
            this.DestinationLocationCountry = pDestinationLocationCountry;
            this.IsDefaultPhoneNumber = pIsDefaultPhoneNumber;
            this.PhoneNumber = pPhoneNumber;
            this.PhoneNumberExtension = pPhoneNumberExtension;
            this.InternationalPhoneNumber = pInternationalPhoneNumber;
            this.PhoneNumberType = pPhoneNumberType;
            this.AddressCommunicationRemarkText = pAddressCommunicationRemarkText;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_AddressHomePageURL {
        @AuraEnabled public String AddressID { get; set; }
        @AuraEnabled public String Person { get; set; }
        @AuraEnabled public String OrdinalNumber { get; set; }
        @AuraEnabled public Datetime ValidityStartDate { get; set; }
        @AuraEnabled public Boolean IsDefaultURLAddress { get; set; }
        @AuraEnabled public String SearchURLAddress { get; set; }
        @AuraEnabled public String AddressCommunicationRemarkText { get; set; }
        @AuraEnabled public Integer URLFieldLength { get; set; }
        @AuraEnabled public String WebsiteURL { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_AddressHomePageURL() {}

        public A_AddressHomePageURL(String pAddressID, String pPerson, String pOrdinalNumber, Datetime pValidityStartDate, Boolean pIsDefaultURLAddress, String pSearchURLAddress, String pAddressCommunicationRemarkText, Integer pURLFieldLength, String pWebsiteURL, String pOVC_FKEY) {
            this.AddressID = pAddressID;
            this.Person = pPerson;
            this.OrdinalNumber = pOrdinalNumber;
            this.ValidityStartDate = pValidityStartDate;
            this.IsDefaultURLAddress = pIsDefaultURLAddress;
            this.SearchURLAddress = pSearchURLAddress;
            this.AddressCommunicationRemarkText = pAddressCommunicationRemarkText;
            this.URLFieldLength = pURLFieldLength;
            this.WebsiteURL = pWebsiteURL;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_BusinessPartnerBank {
        @AuraEnabled public String BusinessPartner { get; set; }
        @AuraEnabled public String BankIdentification { get; set; }
        @AuraEnabled public String BankCountryKey { get; set; }
        @AuraEnabled public String BankName { get; set; }
        @AuraEnabled public String BankNumber { get; set; }
        @AuraEnabled public String SWIFTCode { get; set; }
        @AuraEnabled public String BankControlKey { get; set; }
        @AuraEnabled public String BankAccountHolderName { get; set; }
        @AuraEnabled public String BankAccountName { get; set; }
        @AuraEnabled public Datetime ValidityStartDate { get; set; }
        @AuraEnabled public Datetime ValidityEndDate { get; set; }
        @AuraEnabled public String IBAN { get; set; }
        @AuraEnabled public Datetime IBANValidityStartDate { get; set; }
        @AuraEnabled public String BankAccount { get; set; }
        @AuraEnabled public String BankAccountReferenceText { get; set; }
        @AuraEnabled public Boolean CollectionAuthInd { get; set; }
        @AuraEnabled public String CityName { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_BusinessPartnerBank() {}

        public A_BusinessPartnerBank(String pBusinessPartner, String pBankIdentification, String pBankCountryKey, String pBankName, String pBankNumber, String pSWIFTCode, String pBankControlKey, String pBankAccountHolderName, String pBankAccountName, Datetime pValidityStartDate, Datetime pValidityEndDate, String pIBAN, Datetime pIBANValidityStartDate, String pBankAccount, String pBankAccountReferenceText, Boolean pCollectionAuthInd, String pCityName, String pAuthorizationGroup, String pOVC_FKEY) {
            this.BusinessPartner = pBusinessPartner;
            this.BankIdentification = pBankIdentification;
            this.BankCountryKey = pBankCountryKey;
            this.BankName = pBankName;
            this.BankNumber = pBankNumber;
            this.SWIFTCode = pSWIFTCode;
            this.BankControlKey = pBankControlKey;
            this.BankAccountHolderName = pBankAccountHolderName;
            this.BankAccountName = pBankAccountName;
            this.ValidityStartDate = pValidityStartDate;
            this.ValidityEndDate = pValidityEndDate;
            this.IBAN = pIBAN;
            this.IBANValidityStartDate = pIBANValidityStartDate;
            this.BankAccount = pBankAccount;
            this.BankAccountReferenceText = pBankAccountReferenceText;
            this.CollectionAuthInd = pCollectionAuthInd;
            this.CityName = pCityName;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_BusinessPartnerContact {
        @AuraEnabled public String RelationshipNumber { get; set; }
        @AuraEnabled public String BusinessPartnerCompany { get; set; }
        @AuraEnabled public String BusinessPartnerPerson { get; set; }
        @AuraEnabled public Datetime ValidityEndDate { get; set; }
        @AuraEnabled public Datetime ValidityStartDate { get; set; }
        @AuraEnabled public Boolean IsStandardRelationship { get; set; }
        @AuraEnabled public String RelationshipCategory { get; set; }
        /**
        * Navigation property to A_BPContactToAddress.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_ContactAddress { get; set; }
        /**
        * Navigation property to A_BPContactToFuncAndDept.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_ContactRelationship { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_BusinessPartnerContact() {}

        public A_BusinessPartnerContact(String pRelationshipNumber, String pBusinessPartnerCompany, String pBusinessPartnerPerson, Datetime pValidityEndDate, Datetime pValidityStartDate, Boolean pIsStandardRelationship, String pRelationshipCategory, String pto_ContactAddress, String pto_ContactRelationship, String pOVC_FKEY) {
            this.RelationshipNumber = pRelationshipNumber;
            this.BusinessPartnerCompany = pBusinessPartnerCompany;
            this.BusinessPartnerPerson = pBusinessPartnerPerson;
            this.ValidityEndDate = pValidityEndDate;
            this.ValidityStartDate = pValidityStartDate;
            this.IsStandardRelationship = pIsStandardRelationship;
            this.RelationshipCategory = pRelationshipCategory;
            this.to_ContactAddress = pto_ContactAddress;
            this.to_ContactRelationship = pto_ContactRelationship;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_BPContactToAddress {
        @AuraEnabled public String RelationshipNumber { get; set; }
        @AuraEnabled public String BusinessPartnerCompany { get; set; }
        @AuraEnabled public String BusinessPartnerPerson { get; set; }
        @AuraEnabled public Datetime ValidityEndDate { get; set; }
        @AuraEnabled public String AddressID { get; set; }
        @AuraEnabled public String AddressNumber { get; set; }
        @AuraEnabled public String AdditionalStreetPrefixName { get; set; }
        @AuraEnabled public String AdditionalStreetSuffixName { get; set; }
        @AuraEnabled public String AddressTimeZone { get; set; }
        @AuraEnabled public String CareOfName { get; set; }
        @AuraEnabled public String CityCode { get; set; }
        @AuraEnabled public String CityName { get; set; }
        @AuraEnabled public String CompanyPostalCode { get; set; }
        @AuraEnabled public String Country { get; set; }
        @AuraEnabled public String County { get; set; }
        @AuraEnabled public String DeliveryServiceNumber { get; set; }
        @AuraEnabled public String DeliveryServiceTypeCode { get; set; }
        @AuraEnabled public String District { get; set; }
        @AuraEnabled public String FormOfAddress { get; set; }
        @AuraEnabled public String FullName { get; set; }
        @AuraEnabled public String HomeCityName { get; set; }
        @AuraEnabled public String HouseNumber { get; set; }
        @AuraEnabled public String HouseNumberSupplementText { get; set; }
        @AuraEnabled public String Language { get; set; }
        @AuraEnabled public String POBox { get; set; }
        @AuraEnabled public String POBoxDeviatingCityName { get; set; }
        @AuraEnabled public String POBoxDeviatingCountry { get; set; }
        @AuraEnabled public String POBoxDeviatingRegion { get; set; }
        @AuraEnabled public Boolean POBoxIsWithoutNumber { get; set; }
        @AuraEnabled public String POBoxLobbyName { get; set; }
        @AuraEnabled public String POBoxPostalCode { get; set; }
        @AuraEnabled public String Person { get; set; }
        @AuraEnabled public String PostalCode { get; set; }
        @AuraEnabled public String PrfrdCommMediumType { get; set; }
        @AuraEnabled public String Region { get; set; }
        @AuraEnabled public String StreetName { get; set; }
        @AuraEnabled public String StreetPrefixName { get; set; }
        @AuraEnabled public String StreetSuffixName { get; set; }
        @AuraEnabled public String TaxJurisdiction { get; set; }
        @AuraEnabled public String TransportZone { get; set; }
        /**
        * Navigation property to A_AddressEmailAddress.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_EmailAddress { get; set; }
        /**
        * Navigation property to A_AddressFaxNumber.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_FaxNumber { get; set; }
        /**
        * Navigation property to A_AddressPhoneNumber.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_MobilePhoneNumber { get; set; }
        /**
        * Navigation property to A_AddressPhoneNumber.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_PhoneNumber { get; set; }
        /**
        * Navigation property to A_AddressHomePageURL.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_URLAddress { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_BPContactToAddress() {}

        public A_BPContactToAddress(String pRelationshipNumber, String pBusinessPartnerCompany, String pBusinessPartnerPerson, Datetime pValidityEndDate, String pAddressID, String pAddressNumber, String pAdditionalStreetPrefixName, String pAdditionalStreetSuffixName, String pAddressTimeZone, String pCareOfName, String pCityCode, String pCityName, String pCompanyPostalCode, String pCountry, String pCounty, String pDeliveryServiceNumber, String pDeliveryServiceTypeCode, String pDistrict, String pFormOfAddress, String pFullName, String pHomeCityName, String pHouseNumber, String pHouseNumberSupplementText, String pLanguage, String pPOBox, String pPOBoxDeviatingCityName, String pPOBoxDeviatingCountry, String pPOBoxDeviatingRegion, Boolean pPOBoxIsWithoutNumber, String pPOBoxLobbyName, String pPOBoxPostalCode, String pPerson) {
            this.RelationshipNumber = pRelationshipNumber;
            this.BusinessPartnerCompany = pBusinessPartnerCompany;
            this.BusinessPartnerPerson = pBusinessPartnerPerson;
            this.ValidityEndDate = pValidityEndDate;
            this.AddressID = pAddressID;
            this.AddressNumber = pAddressNumber;
            this.AdditionalStreetPrefixName = pAdditionalStreetPrefixName;
            this.AdditionalStreetSuffixName = pAdditionalStreetSuffixName;
            this.AddressTimeZone = pAddressTimeZone;
            this.CareOfName = pCareOfName;
            this.CityCode = pCityCode;
            this.CityName = pCityName;
            this.CompanyPostalCode = pCompanyPostalCode;
            this.Country = pCountry;
            this.County = pCounty;
            this.DeliveryServiceNumber = pDeliveryServiceNumber;
            this.DeliveryServiceTypeCode = pDeliveryServiceTypeCode;
            this.District = pDistrict;
            this.FormOfAddress = pFormOfAddress;
            this.FullName = pFullName;
            this.HomeCityName = pHomeCityName;
            this.HouseNumber = pHouseNumber;
            this.HouseNumberSupplementText = pHouseNumberSupplementText;
            this.Language = pLanguage;
            this.POBox = pPOBox;
            this.POBoxDeviatingCityName = pPOBoxDeviatingCityName;
            this.POBoxDeviatingCountry = pPOBoxDeviatingCountry;
            this.POBoxDeviatingRegion = pPOBoxDeviatingRegion;
            this.POBoxIsWithoutNumber = pPOBoxIsWithoutNumber;
            this.POBoxLobbyName = pPOBoxLobbyName;
            this.POBoxPostalCode = pPOBoxPostalCode;
            this.Person = pPerson;
        }
    }

    public class A_BPContactToFuncAndDept {
        @AuraEnabled public String RelationshipNumber { get; set; }
        @AuraEnabled public String BusinessPartnerCompany { get; set; }
        @AuraEnabled public String BusinessPartnerPerson { get; set; }
        @AuraEnabled public Datetime ValidityEndDate { get; set; }
        @AuraEnabled public String ContactPersonFunction { get; set; }
        @AuraEnabled public String ContactPersonDepartment { get; set; }
        @AuraEnabled public String PhoneNumber { get; set; }
        @AuraEnabled public String PhoneNumberExtension { get; set; }
        @AuraEnabled public String FaxNumber { get; set; }
        @AuraEnabled public String FaxNumberExtension { get; set; }
        @AuraEnabled public String EmailAddress { get; set; }
        @AuraEnabled public String RelationshipCategory { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_BPContactToFuncAndDept() {}

        public A_BPContactToFuncAndDept(String pRelationshipNumber, String pBusinessPartnerCompany, String pBusinessPartnerPerson, Datetime pValidityEndDate, String pContactPersonFunction, String pContactPersonDepartment, String pPhoneNumber, String pPhoneNumberExtension, String pFaxNumber, String pFaxNumberExtension, String pEmailAddress, String pRelationshipCategory, String pOVC_FKEY) {
            this.RelationshipNumber = pRelationshipNumber;
            this.BusinessPartnerCompany = pBusinessPartnerCompany;
            this.BusinessPartnerPerson = pBusinessPartnerPerson;
            this.ValidityEndDate = pValidityEndDate;
            this.ContactPersonFunction = pContactPersonFunction;
            this.ContactPersonDepartment = pContactPersonDepartment;
            this.PhoneNumber = pPhoneNumber;
            this.PhoneNumberExtension = pPhoneNumberExtension;
            this.FaxNumber = pFaxNumber;
            this.FaxNumberExtension = pFaxNumberExtension;
            this.EmailAddress = pEmailAddress;
            this.RelationshipCategory = pRelationshipCategory;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_BusinessPartnerRole {
        @AuraEnabled public String BusinessPartner { get; set; }
        @AuraEnabled public String BusinessPartnerRole { get; set; }
        @AuraEnabled public Datetime ValidFrom { get; set; }
        @AuraEnabled public Datetime ValidTo { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_BusinessPartnerRole() {}

        public A_BusinessPartnerRole(String pBusinessPartner, String pBusinessPartnerRole, Datetime pValidFrom, Datetime pValidTo, String pAuthorizationGroup, String pOVC_FKEY) {
            this.BusinessPartner = pBusinessPartner;
            this.BusinessPartnerRole = pBusinessPartnerRole;
            this.ValidFrom = pValidFrom;
            this.ValidTo = pValidTo;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_BusinessPartnerTaxNumber {
        @AuraEnabled public String BusinessPartner { get; set; }
        @AuraEnabled public String BPTaxType { get; set; }
        @AuraEnabled public String BPTaxNumber { get; set; }
        @AuraEnabled public String BPTaxLongNumber { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_BusinessPartnerTaxNumber() {}

        public A_BusinessPartnerTaxNumber(String pBusinessPartner, String pBPTaxType, String pBPTaxNumber, String pBPTaxLongNumber, String pAuthorizationGroup, String pOVC_FKEY) {
            this.BusinessPartner = pBusinessPartner;
            this.BPTaxType = pBPTaxType;
            this.BPTaxNumber = pBPTaxNumber;
            this.BPTaxLongNumber = pBPTaxLongNumber;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_Customer {
        @AuraEnabled public String Customer { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        @AuraEnabled public String BillingIsBlockedForCustomer { get; set; }
        @AuraEnabled public String CreatedByUser { get; set; }
        @AuraEnabled public Datetime CreationDate { get; set; }
        @AuraEnabled public String CustomerAccountGroup { get; set; }
        @AuraEnabled public String CustomerClassification { get; set; }
        @AuraEnabled public String CustomerFullName { get; set; }
        @AuraEnabled public String CustomerName { get; set; }
        @AuraEnabled public String DeliveryIsBlocked { get; set; }
        @AuraEnabled public String NFPartnerIsNaturalPerson { get; set; }
        @AuraEnabled public String OrderIsBlockedForCustomer { get; set; }
        @AuraEnabled public Boolean PostingIsBlocked { get; set; }
        @AuraEnabled public String Supplier { get; set; }
        @AuraEnabled public String CustomerCorporateGroup { get; set; }
        @AuraEnabled public String FiscalAddress { get; set; }
        @AuraEnabled public String Industry { get; set; }
        @AuraEnabled public String IndustryCode1 { get; set; }
        @AuraEnabled public String IndustryCode2 { get; set; }
        @AuraEnabled public String IndustryCode3 { get; set; }
        @AuraEnabled public String IndustryCode4 { get; set; }
        @AuraEnabled public String IndustryCode5 { get; set; }
        @AuraEnabled public String InternationalLocationNumber1 { get; set; }
        @AuraEnabled public String NielsenRegion { get; set; }
        @AuraEnabled public String ResponsibleType { get; set; }
        @AuraEnabled public String TaxNumber1 { get; set; }
        @AuraEnabled public String TaxNumber2 { get; set; }
        @AuraEnabled public String TaxNumber3 { get; set; }
        @AuraEnabled public String TaxNumber4 { get; set; }
        @AuraEnabled public String TaxNumber5 { get; set; }
        @AuraEnabled public String TaxNumberType { get; set; }
        @AuraEnabled public String VATRegistration { get; set; }
        @AuraEnabled public Boolean DeletionIndicator { get; set; }
        /**
        * Navigation property to A_CustomerCompany.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_CustomerCompany { get; set; }
        /**
        * Navigation property to A_CustomerSalesArea.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_CustomerSalesArea { get; set; }
        /**
        * Navigation property to A_CustomerTaxGrouping.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_CustomerTaxGrouping { get; set; }
        /**
        * Navigation property to A_CustomerText.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_CustomerText { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_Customer() {}

        public A_Customer(String pCustomer, String pAuthorizationGroup, String pBillingIsBlockedForCustomer, String pCreatedByUser, Datetime pCreationDate, String pCustomerAccountGroup, String pCustomerClassification, String pCustomerFullName, String pCustomerName, String pDeliveryIsBlocked, String pNFPartnerIsNaturalPerson, String pOrderIsBlockedForCustomer, Boolean pPostingIsBlocked, String pSupplier, String pCustomerCorporateGroup, String pFiscalAddress, String pIndustry, String pIndustryCode1, String pIndustryCode2, String pIndustryCode3, String pIndustryCode4, String pIndustryCode5, String pInternationalLocationNumber1, String pNielsenRegion, String pResponsibleType, String pTaxNumber1, String pTaxNumber2, String pTaxNumber3, String pTaxNumber4, String pTaxNumber5, String pTaxNumberType, String pVATRegistration) {
            this.Customer = pCustomer;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.BillingIsBlockedForCustomer = pBillingIsBlockedForCustomer;
            this.CreatedByUser = pCreatedByUser;
            this.CreationDate = pCreationDate;
            this.CustomerAccountGroup = pCustomerAccountGroup;
            this.CustomerClassification = pCustomerClassification;
            this.CustomerFullName = pCustomerFullName;
            this.CustomerName = pCustomerName;
            this.DeliveryIsBlocked = pDeliveryIsBlocked;
            this.NFPartnerIsNaturalPerson = pNFPartnerIsNaturalPerson;
            this.OrderIsBlockedForCustomer = pOrderIsBlockedForCustomer;
            this.PostingIsBlocked = pPostingIsBlocked;
            this.Supplier = pSupplier;
            this.CustomerCorporateGroup = pCustomerCorporateGroup;
            this.FiscalAddress = pFiscalAddress;
            this.Industry = pIndustry;
            this.IndustryCode1 = pIndustryCode1;
            this.IndustryCode2 = pIndustryCode2;
            this.IndustryCode3 = pIndustryCode3;
            this.IndustryCode4 = pIndustryCode4;
            this.IndustryCode5 = pIndustryCode5;
            this.InternationalLocationNumber1 = pInternationalLocationNumber1;
            this.NielsenRegion = pNielsenRegion;
            this.ResponsibleType = pResponsibleType;
            this.TaxNumber1 = pTaxNumber1;
            this.TaxNumber2 = pTaxNumber2;
            this.TaxNumber3 = pTaxNumber3;
            this.TaxNumber4 = pTaxNumber4;
            this.TaxNumber5 = pTaxNumber5;
            this.TaxNumberType = pTaxNumberType;
            this.VATRegistration = pVATRegistration;
        }
    }

    public class A_CustomerCompany {
        @AuraEnabled public String Customer { get; set; }
        @AuraEnabled public String CompanyCode { get; set; }
        @AuraEnabled public String APARToleranceGroup { get; set; }
        @AuraEnabled public String AccountByCustomer { get; set; }
        @AuraEnabled public String AccountingClerk { get; set; }
        @AuraEnabled public String AccountingClerkFaxNumber { get; set; }
        @AuraEnabled public String AccountingClerkInternetAddress { get; set; }
        @AuraEnabled public String AccountingClerkPhoneNumber { get; set; }
        @AuraEnabled public String AlternativePayerAccount { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        @AuraEnabled public String CollectiveInvoiceVariant { get; set; }
        @AuraEnabled public String CustomerAccountNote { get; set; }
        @AuraEnabled public String CustomerHeadOffice { get; set; }
        @AuraEnabled public Boolean CustomerSupplierClearingIsUsed { get; set; }
        @AuraEnabled public String HouseBank { get; set; }
        @AuraEnabled public String InterestCalculationCode { get; set; }
        @AuraEnabled public Datetime InterestCalculationDate { get; set; }
        @AuraEnabled public String IntrstCalcFrequencyInMonths { get; set; }
        @AuraEnabled public Boolean IsToBeLocallyProcessed { get; set; }
        @AuraEnabled public Boolean ItemIsToBePaidSeparately { get; set; }
        @AuraEnabled public String LayoutSortingRule { get; set; }
        @AuraEnabled public String PaymentBlockingReason { get; set; }
        @AuraEnabled public String PaymentMethodsList { get; set; }
        @AuraEnabled public String PaymentTerms { get; set; }
        @AuraEnabled public Boolean PaytAdviceIsSentbyEDI { get; set; }
        @AuraEnabled public Boolean PhysicalInventoryBlockInd { get; set; }
        @AuraEnabled public String ReconciliationAccount { get; set; }
        @AuraEnabled public Boolean RecordPaymentHistoryIndicator { get; set; }
        @AuraEnabled public String UserAtCustomer { get; set; }
        @AuraEnabled public Boolean DeletionIndicator { get; set; }
        @AuraEnabled public String CashPlanningGroup { get; set; }
        @AuraEnabled public String KnownOrNegotiatedLeave { get; set; }
        @AuraEnabled public String ValueAdjustmentKey { get; set; }
        @AuraEnabled public String CustomerAccountGroup { get; set; }
        /**
        * Navigation property to A_CustomerCompanyText.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_CompanyText { get; set; }
        /**
        * Navigation property to A_CustomerDunning.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_CustomerDunning { get; set; }
        /**
        * Navigation property to A_CustomerWithHoldingTax.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_WithHoldingTax { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_CustomerCompany() {}

        public A_CustomerCompany(String pCustomer, String pCompanyCode, String pAPARToleranceGroup, String pAccountByCustomer, String pAccountingClerk, String pAccountingClerkFaxNumber, String pAccountingClerkInternetAddress, String pAccountingClerkPhoneNumber, String pAlternativePayerAccount, String pAuthorizationGroup, String pCollectiveInvoiceVariant, String pCustomerAccountNote, String pCustomerHeadOffice, Boolean pCustomerSupplierClearingIsUsed, String pHouseBank, String pInterestCalculationCode, Datetime pInterestCalculationDate, String pIntrstCalcFrequencyInMonths, Boolean pIsToBeLocallyProcessed, Boolean pItemIsToBePaidSeparately, String pLayoutSortingRule, String pPaymentBlockingReason, String pPaymentMethodsList, String pPaymentTerms, Boolean pPaytAdviceIsSentbyEDI, Boolean pPhysicalInventoryBlockInd, String pReconciliationAccount, Boolean pRecordPaymentHistoryIndicator, String pUserAtCustomer, Boolean pDeletionIndicator, String pCashPlanningGroup, String pKnownOrNegotiatedLeave) {
            this.Customer = pCustomer;
            this.CompanyCode = pCompanyCode;
            this.APARToleranceGroup = pAPARToleranceGroup;
            this.AccountByCustomer = pAccountByCustomer;
            this.AccountingClerk = pAccountingClerk;
            this.AccountingClerkFaxNumber = pAccountingClerkFaxNumber;
            this.AccountingClerkInternetAddress = pAccountingClerkInternetAddress;
            this.AccountingClerkPhoneNumber = pAccountingClerkPhoneNumber;
            this.AlternativePayerAccount = pAlternativePayerAccount;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.CollectiveInvoiceVariant = pCollectiveInvoiceVariant;
            this.CustomerAccountNote = pCustomerAccountNote;
            this.CustomerHeadOffice = pCustomerHeadOffice;
            this.CustomerSupplierClearingIsUsed = pCustomerSupplierClearingIsUsed;
            this.HouseBank = pHouseBank;
            this.InterestCalculationCode = pInterestCalculationCode;
            this.InterestCalculationDate = pInterestCalculationDate;
            this.IntrstCalcFrequencyInMonths = pIntrstCalcFrequencyInMonths;
            this.IsToBeLocallyProcessed = pIsToBeLocallyProcessed;
            this.ItemIsToBePaidSeparately = pItemIsToBePaidSeparately;
            this.LayoutSortingRule = pLayoutSortingRule;
            this.PaymentBlockingReason = pPaymentBlockingReason;
            this.PaymentMethodsList = pPaymentMethodsList;
            this.PaymentTerms = pPaymentTerms;
            this.PaytAdviceIsSentbyEDI = pPaytAdviceIsSentbyEDI;
            this.PhysicalInventoryBlockInd = pPhysicalInventoryBlockInd;
            this.ReconciliationAccount = pReconciliationAccount;
            this.RecordPaymentHistoryIndicator = pRecordPaymentHistoryIndicator;
            this.UserAtCustomer = pUserAtCustomer;
            this.DeletionIndicator = pDeletionIndicator;
            this.CashPlanningGroup = pCashPlanningGroup;
            this.KnownOrNegotiatedLeave = pKnownOrNegotiatedLeave;
        }
    }

    public class A_CustomerCompanyText {
        @AuraEnabled public String Customer { get; set; }
        @AuraEnabled public String CompanyCode { get; set; }
        @AuraEnabled public String Language { get; set; }
        @AuraEnabled public String LongTextID { get; set; }
        @AuraEnabled public String LongText { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_CustomerCompanyText() {}

        public A_CustomerCompanyText(String pCustomer, String pCompanyCode, String pLanguage, String pLongTextID, String pLongText, String pOVC_FKEY) {
            this.Customer = pCustomer;
            this.CompanyCode = pCompanyCode;
            this.Language = pLanguage;
            this.LongTextID = pLongTextID;
            this.LongText = pLongText;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_CustomerDunning {
        @AuraEnabled public String Customer { get; set; }
        @AuraEnabled public String CompanyCode { get; set; }
        @AuraEnabled public String DunningArea { get; set; }
        @AuraEnabled public String DunningBlock { get; set; }
        @AuraEnabled public String DunningLevel { get; set; }
        @AuraEnabled public String DunningProcedure { get; set; }
        @AuraEnabled public String DunningRecipient { get; set; }
        @AuraEnabled public Datetime LastDunnedOn { get; set; }
        @AuraEnabled public Datetime LegDunningProcedureOn { get; set; }
        @AuraEnabled public String DunningClerk { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        @AuraEnabled public String CustomerAccountGroup { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_CustomerDunning() {}

        public A_CustomerDunning(String pCustomer, String pCompanyCode, String pDunningArea, String pDunningBlock, String pDunningLevel, String pDunningProcedure, String pDunningRecipient, Datetime pLastDunnedOn, Datetime pLegDunningProcedureOn, String pDunningClerk, String pAuthorizationGroup, String pCustomerAccountGroup, String pOVC_FKEY) {
            this.Customer = pCustomer;
            this.CompanyCode = pCompanyCode;
            this.DunningArea = pDunningArea;
            this.DunningBlock = pDunningBlock;
            this.DunningLevel = pDunningLevel;
            this.DunningProcedure = pDunningProcedure;
            this.DunningRecipient = pDunningRecipient;
            this.LastDunnedOn = pLastDunnedOn;
            this.LegDunningProcedureOn = pLegDunningProcedureOn;
            this.DunningClerk = pDunningClerk;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.CustomerAccountGroup = pCustomerAccountGroup;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_CustomerWithHoldingTax {
        @AuraEnabled public String Customer { get; set; }
        @AuraEnabled public String CompanyCode { get; set; }
        @AuraEnabled public String WithholdingTaxType { get; set; }
        @AuraEnabled public String WithholdingTaxCode { get; set; }
        @AuraEnabled public Boolean WithholdingTaxAgent { get; set; }
        @AuraEnabled public Datetime ObligationDateBegin { get; set; }
        @AuraEnabled public Datetime ObligationDateEnd { get; set; }
        @AuraEnabled public String WithholdingTaxNumber { get; set; }
        @AuraEnabled public String WithholdingTaxCertificate { get; set; }
        @AuraEnabled public Decimal WithholdingTaxExmptPercent { get; set; }
        @AuraEnabled public Datetime ExemptionDateBegin { get; set; }
        @AuraEnabled public Datetime ExemptionDateEnd { get; set; }
        @AuraEnabled public String ExemptionReason { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_CustomerWithHoldingTax() {}

        public A_CustomerWithHoldingTax(String pCustomer, String pCompanyCode, String pWithholdingTaxType, String pWithholdingTaxCode, Boolean pWithholdingTaxAgent, Datetime pObligationDateBegin, Datetime pObligationDateEnd, String pWithholdingTaxNumber, String pWithholdingTaxCertificate, Decimal pWithholdingTaxExmptPercent, Datetime pExemptionDateBegin, Datetime pExemptionDateEnd, String pExemptionReason, String pAuthorizationGroup, String pOVC_FKEY) {
            this.Customer = pCustomer;
            this.CompanyCode = pCompanyCode;
            this.WithholdingTaxType = pWithholdingTaxType;
            this.WithholdingTaxCode = pWithholdingTaxCode;
            this.WithholdingTaxAgent = pWithholdingTaxAgent;
            this.ObligationDateBegin = pObligationDateBegin;
            this.ObligationDateEnd = pObligationDateEnd;
            this.WithholdingTaxNumber = pWithholdingTaxNumber;
            this.WithholdingTaxCertificate = pWithholdingTaxCertificate;
            this.WithholdingTaxExmptPercent = pWithholdingTaxExmptPercent;
            this.ExemptionDateBegin = pExemptionDateBegin;
            this.ExemptionDateEnd = pExemptionDateEnd;
            this.ExemptionReason = pExemptionReason;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_CustomerSalesArea {
        @AuraEnabled public String Customer { get; set; }
        @AuraEnabled public String SalesOrganization { get; set; }
        @AuraEnabled public String DistributionChannel { get; set; }
        @AuraEnabled public String Division { get; set; }
        @AuraEnabled public String AccountByCustomer { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        @AuraEnabled public String BillingIsBlockedForCustomer { get; set; }
        @AuraEnabled public Boolean CompleteDeliveryIsDefined { get; set; }
        @AuraEnabled public String Currency_x { get; set; }
        @AuraEnabled public String CustomerABCClassification { get; set; }
        @AuraEnabled public String CustomerAccountAssignmentGroup { get; set; }
        @AuraEnabled public String CustomerGroup { get; set; }
        @AuraEnabled public String CustomerPaymentTerms { get; set; }
        @AuraEnabled public String CustomerPriceGroup { get; set; }
        @AuraEnabled public String CustomerPricingProcedure { get; set; }
        @AuraEnabled public String DeliveryIsBlockedForCustomer { get; set; }
        @AuraEnabled public String DeliveryPriority { get; set; }
        @AuraEnabled public String IncotermsClassification { get; set; }
        @AuraEnabled public String IncotermsLocation2 { get; set; }
        @AuraEnabled public String IncotermsVersion { get; set; }
        @AuraEnabled public String IncotermsLocation1 { get; set; }
        @AuraEnabled public Boolean DeletionIndicator { get; set; }
        @AuraEnabled public String IncotermsTransferLocation { get; set; }
        @AuraEnabled public String InvoiceDate { get; set; }
        @AuraEnabled public String ItemOrderProbabilityInPercent { get; set; }
        @AuraEnabled public Boolean OrderCombinationIsAllowed { get; set; }
        @AuraEnabled public String OrderIsBlockedForCustomer { get; set; }
        @AuraEnabled public String PartialDeliveryIsAllowed { get; set; }
        @AuraEnabled public String PriceListType { get; set; }
        @AuraEnabled public String SalesGroup { get; set; }
        @AuraEnabled public String SalesOffice { get; set; }
        @AuraEnabled public String ShippingCondition { get; set; }
        @AuraEnabled public String SupplyingPlant { get; set; }
        @AuraEnabled public String SalesDistrict { get; set; }
        @AuraEnabled public String InvoiceListSchedule { get; set; }
        @AuraEnabled public String ExchangeRateType { get; set; }
        @AuraEnabled public String AdditionalCustomerGroup1 { get; set; }
        @AuraEnabled public String AdditionalCustomerGroup2 { get; set; }
        @AuraEnabled public String AdditionalCustomerGroup3 { get; set; }
        @AuraEnabled public String AdditionalCustomerGroup4 { get; set; }
        @AuraEnabled public String AdditionalCustomerGroup5 { get; set; }
        @AuraEnabled public String PaymentGuaranteeProcedure { get; set; }
        @AuraEnabled public String CustomerAccountGroup { get; set; }
        /**
        * Navigation property to A_CustSalesPartnerFunc.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_PartnerFunction { get; set; }
        /**
        * Navigation property to A_CustomerSalesAreaTax.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_SalesAreaTax { get; set; }
        /**
        * Navigation property to A_CustomerSalesAreaText.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_SalesAreaText { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_CustomerSalesArea() {}

        public A_CustomerSalesArea(String pCustomer, String pSalesOrganization, String pDistributionChannel, String pDivision, String pAccountByCustomer, String pAuthorizationGroup, String pBillingIsBlockedForCustomer, Boolean pCompleteDeliveryIsDefined, String pCurrency_x, String pCustomerABCClassification, String pCustomerAccountAssignmentGroup, String pCustomerGroup, String pCustomerPaymentTerms, String pCustomerPriceGroup, String pCustomerPricingProcedure, String pDeliveryIsBlockedForCustomer, String pDeliveryPriority, String pIncotermsClassification, String pIncotermsLocation2, String pIncotermsVersion, String pIncotermsLocation1, Boolean pDeletionIndicator, String pIncotermsTransferLocation, String pInvoiceDate, String pItemOrderProbabilityInPercent, Boolean pOrderCombinationIsAllowed, String pOrderIsBlockedForCustomer, String pPartialDeliveryIsAllowed, String pPriceListType, String pSalesGroup, String pSalesOffice, String pShippingCondition) {
            this.Customer = pCustomer;
            this.SalesOrganization = pSalesOrganization;
            this.DistributionChannel = pDistributionChannel;
            this.Division = pDivision;
            this.AccountByCustomer = pAccountByCustomer;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.BillingIsBlockedForCustomer = pBillingIsBlockedForCustomer;
            this.CompleteDeliveryIsDefined = pCompleteDeliveryIsDefined;
            this.Currency_x = pCurrency_x;
            this.CustomerABCClassification = pCustomerABCClassification;
            this.CustomerAccountAssignmentGroup = pCustomerAccountAssignmentGroup;
            this.CustomerGroup = pCustomerGroup;
            this.CustomerPaymentTerms = pCustomerPaymentTerms;
            this.CustomerPriceGroup = pCustomerPriceGroup;
            this.CustomerPricingProcedure = pCustomerPricingProcedure;
            this.DeliveryIsBlockedForCustomer = pDeliveryIsBlockedForCustomer;
            this.DeliveryPriority = pDeliveryPriority;
            this.IncotermsClassification = pIncotermsClassification;
            this.IncotermsLocation2 = pIncotermsLocation2;
            this.IncotermsVersion = pIncotermsVersion;
            this.IncotermsLocation1 = pIncotermsLocation1;
            this.DeletionIndicator = pDeletionIndicator;
            this.IncotermsTransferLocation = pIncotermsTransferLocation;
            this.InvoiceDate = pInvoiceDate;
            this.ItemOrderProbabilityInPercent = pItemOrderProbabilityInPercent;
            this.OrderCombinationIsAllowed = pOrderCombinationIsAllowed;
            this.OrderIsBlockedForCustomer = pOrderIsBlockedForCustomer;
            this.PartialDeliveryIsAllowed = pPartialDeliveryIsAllowed;
            this.PriceListType = pPriceListType;
            this.SalesGroup = pSalesGroup;
            this.SalesOffice = pSalesOffice;
            this.ShippingCondition = pShippingCondition;
        }
    }

    public class A_CustSalesPartnerFunc {
        @AuraEnabled public String Customer { get; set; }
        @AuraEnabled public String SalesOrganization { get; set; }
        @AuraEnabled public String DistributionChannel { get; set; }
        @AuraEnabled public String Division { get; set; }
        @AuraEnabled public String PartnerCounter { get; set; }
        @AuraEnabled public String PartnerFunction { get; set; }
        @AuraEnabled public String BPCustomerNumber { get; set; }
        @AuraEnabled public String CustomerPartnerDescription { get; set; }
        @AuraEnabled public Boolean DefaultPartner { get; set; }
        @AuraEnabled public String Supplier { get; set; }
        @AuraEnabled public String PersonnelNumber { get; set; }
        @AuraEnabled public String ContactPerson { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_CustSalesPartnerFunc() {}

        public A_CustSalesPartnerFunc(String pCustomer, String pSalesOrganization, String pDistributionChannel, String pDivision, String pPartnerCounter, String pPartnerFunction, String pBPCustomerNumber, String pCustomerPartnerDescription, Boolean pDefaultPartner, String pSupplier, String pPersonnelNumber, String pContactPerson, String pAuthorizationGroup, String pOVC_FKEY) {
            this.Customer = pCustomer;
            this.SalesOrganization = pSalesOrganization;
            this.DistributionChannel = pDistributionChannel;
            this.Division = pDivision;
            this.PartnerCounter = pPartnerCounter;
            this.PartnerFunction = pPartnerFunction;
            this.BPCustomerNumber = pBPCustomerNumber;
            this.CustomerPartnerDescription = pCustomerPartnerDescription;
            this.DefaultPartner = pDefaultPartner;
            this.Supplier = pSupplier;
            this.PersonnelNumber = pPersonnelNumber;
            this.ContactPerson = pContactPerson;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_CustomerSalesAreaTax {
        @AuraEnabled public String Customer { get; set; }
        @AuraEnabled public String SalesOrganization { get; set; }
        @AuraEnabled public String DistributionChannel { get; set; }
        @AuraEnabled public String Division { get; set; }
        @AuraEnabled public String DepartureCountry { get; set; }
        @AuraEnabled public String CustomerTaxCategory { get; set; }
        @AuraEnabled public String CustomerTaxClassification { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_CustomerSalesAreaTax() {}

        public A_CustomerSalesAreaTax(String pCustomer, String pSalesOrganization, String pDistributionChannel, String pDivision, String pDepartureCountry, String pCustomerTaxCategory, String pCustomerTaxClassification, String pOVC_FKEY) {
            this.Customer = pCustomer;
            this.SalesOrganization = pSalesOrganization;
            this.DistributionChannel = pDistributionChannel;
            this.Division = pDivision;
            this.DepartureCountry = pDepartureCountry;
            this.CustomerTaxCategory = pCustomerTaxCategory;
            this.CustomerTaxClassification = pCustomerTaxClassification;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_CustomerSalesAreaText {
        @AuraEnabled public String Customer { get; set; }
        @AuraEnabled public String SalesOrganization { get; set; }
        @AuraEnabled public String DistributionChannel { get; set; }
        @AuraEnabled public String Division { get; set; }
        @AuraEnabled public String Language { get; set; }
        @AuraEnabled public String LongTextID { get; set; }
        @AuraEnabled public String LongText { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_CustomerSalesAreaText() {}

        public A_CustomerSalesAreaText(String pCustomer, String pSalesOrganization, String pDistributionChannel, String pDivision, String pLanguage, String pLongTextID, String pLongText, String pOVC_FKEY) {
            this.Customer = pCustomer;
            this.SalesOrganization = pSalesOrganization;
            this.DistributionChannel = pDistributionChannel;
            this.Division = pDivision;
            this.Language = pLanguage;
            this.LongTextID = pLongTextID;
            this.LongText = pLongText;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_CustomerTaxGrouping {
        @AuraEnabled public String Customer { get; set; }
        @AuraEnabled public String CustomerTaxGroupingCode { get; set; }
        @AuraEnabled public String CustTaxGrpExemptionCertificate { get; set; }
        @AuraEnabled public Decimal CustTaxGroupExemptionRate { get; set; }
        @AuraEnabled public Datetime CustTaxGroupExemptionStartDate { get; set; }
        @AuraEnabled public Datetime CustTaxGroupExemptionEndDate { get; set; }
        @AuraEnabled public Datetime CustTaxGroupSubjectedStartDate { get; set; }
        @AuraEnabled public Datetime CustTaxGroupSubjectedEndDate { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_CustomerTaxGrouping() {}

        public A_CustomerTaxGrouping(String pCustomer, String pCustomerTaxGroupingCode, String pCustTaxGrpExemptionCertificate, Decimal pCustTaxGroupExemptionRate, Datetime pCustTaxGroupExemptionStartDate, Datetime pCustTaxGroupExemptionEndDate, Datetime pCustTaxGroupSubjectedStartDate, Datetime pCustTaxGroupSubjectedEndDate, String pOVC_FKEY) {
            this.Customer = pCustomer;
            this.CustomerTaxGroupingCode = pCustomerTaxGroupingCode;
            this.CustTaxGrpExemptionCertificate = pCustTaxGrpExemptionCertificate;
            this.CustTaxGroupExemptionRate = pCustTaxGroupExemptionRate;
            this.CustTaxGroupExemptionStartDate = pCustTaxGroupExemptionStartDate;
            this.CustTaxGroupExemptionEndDate = pCustTaxGroupExemptionEndDate;
            this.CustTaxGroupSubjectedStartDate = pCustTaxGroupSubjectedStartDate;
            this.CustTaxGroupSubjectedEndDate = pCustTaxGroupSubjectedEndDate;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_CustomerText {
        @AuraEnabled public String Customer { get; set; }
        @AuraEnabled public String Language { get; set; }
        @AuraEnabled public String LongTextID { get; set; }
        @AuraEnabled public String LongText { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_CustomerText() {}

        public A_CustomerText(String pCustomer, String pLanguage, String pLongTextID, String pLongText, String pOVC_FKEY) {
            this.Customer = pCustomer;
            this.Language = pLanguage;
            this.LongTextID = pLongTextID;
            this.LongText = pLongText;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_Supplier {
        @AuraEnabled public String Supplier { get; set; }
        @AuraEnabled public String AlternativePayeeAccountNumber { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        @AuraEnabled public String CreatedByUser { get; set; }
        @AuraEnabled public Datetime CreationDate { get; set; }
        @AuraEnabled public String Customer { get; set; }
        @AuraEnabled public Boolean PaymentIsBlockedForSupplier { get; set; }
        @AuraEnabled public Boolean PostingIsBlocked { get; set; }
        @AuraEnabled public Boolean PurchasingIsBlocked { get; set; }
        @AuraEnabled public String SupplierAccountGroup { get; set; }
        @AuraEnabled public String SupplierFullName { get; set; }
        @AuraEnabled public String SupplierName { get; set; }
        @AuraEnabled public String VATRegistration { get; set; }
        @AuraEnabled public Datetime BirthDate { get; set; }
        @AuraEnabled public String ConcatenatedInternationalLocNo { get; set; }
        @AuraEnabled public Boolean DeletionIndicator { get; set; }
        @AuraEnabled public String FiscalAddress { get; set; }
        @AuraEnabled public String Industry { get; set; }
        @AuraEnabled public String InternationalLocationNumber1 { get; set; }
        @AuraEnabled public String InternationalLocationNumber2 { get; set; }
        @AuraEnabled public String InternationalLocationNumber3 { get; set; }
        @AuraEnabled public String IsNaturalPerson { get; set; }
        @AuraEnabled public String ResponsibleType { get; set; }
        @AuraEnabled public Datetime SuplrQltyInProcmtCertfnValidTo { get; set; }
        @AuraEnabled public String SuplrQualityManagementSystem { get; set; }
        @AuraEnabled public String SupplierCorporateGroup { get; set; }
        @AuraEnabled public String SupplierProcurementBlock { get; set; }
        @AuraEnabled public String TaxNumber1 { get; set; }
        @AuraEnabled public String TaxNumber2 { get; set; }
        @AuraEnabled public String TaxNumber3 { get; set; }
        @AuraEnabled public String TaxNumber4 { get; set; }
        @AuraEnabled public String TaxNumber5 { get; set; }
        @AuraEnabled public String TaxNumberResponsible { get; set; }
        @AuraEnabled public String TaxNumberType { get; set; }
        @AuraEnabled public String SuplrProofOfDelivRlvtCode { get; set; }
        @AuraEnabled public Boolean BR_TaxIsSplit { get; set; }
        /**
        * Navigation property to A_SupplierCompany.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_SupplierCompany { get; set; }
        /**
        * Navigation property to A_SupplierPurchasingOrg.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_SupplierPurchasingOrg { get; set; }
        /**
        * Navigation property to A_SupplierText.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_SupplierText { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_Supplier() {}

        public A_Supplier(String pSupplier, String pAlternativePayeeAccountNumber, String pAuthorizationGroup, String pCreatedByUser, Datetime pCreationDate, String pCustomer, Boolean pPaymentIsBlockedForSupplier, Boolean pPostingIsBlocked, Boolean pPurchasingIsBlocked, String pSupplierAccountGroup, String pSupplierFullName, String pSupplierName, String pVATRegistration, Datetime pBirthDate, String pConcatenatedInternationalLocNo, Boolean pDeletionIndicator, String pFiscalAddress, String pIndustry, String pInternationalLocationNumber1, String pInternationalLocationNumber2, String pInternationalLocationNumber3, String pIsNaturalPerson, String pResponsibleType, Datetime pSuplrQltyInProcmtCertfnValidTo, String pSuplrQualityManagementSystem, String pSupplierCorporateGroup, String pSupplierProcurementBlock, String pTaxNumber1, String pTaxNumber2, String pTaxNumber3, String pTaxNumber4, String pTaxNumber5) {
            this.Supplier = pSupplier;
            this.AlternativePayeeAccountNumber = pAlternativePayeeAccountNumber;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.CreatedByUser = pCreatedByUser;
            this.CreationDate = pCreationDate;
            this.Customer = pCustomer;
            this.PaymentIsBlockedForSupplier = pPaymentIsBlockedForSupplier;
            this.PostingIsBlocked = pPostingIsBlocked;
            this.PurchasingIsBlocked = pPurchasingIsBlocked;
            this.SupplierAccountGroup = pSupplierAccountGroup;
            this.SupplierFullName = pSupplierFullName;
            this.SupplierName = pSupplierName;
            this.VATRegistration = pVATRegistration;
            this.BirthDate = pBirthDate;
            this.ConcatenatedInternationalLocNo = pConcatenatedInternationalLocNo;
            this.DeletionIndicator = pDeletionIndicator;
            this.FiscalAddress = pFiscalAddress;
            this.Industry = pIndustry;
            this.InternationalLocationNumber1 = pInternationalLocationNumber1;
            this.InternationalLocationNumber2 = pInternationalLocationNumber2;
            this.InternationalLocationNumber3 = pInternationalLocationNumber3;
            this.IsNaturalPerson = pIsNaturalPerson;
            this.ResponsibleType = pResponsibleType;
            this.SuplrQltyInProcmtCertfnValidTo = pSuplrQltyInProcmtCertfnValidTo;
            this.SuplrQualityManagementSystem = pSuplrQualityManagementSystem;
            this.SupplierCorporateGroup = pSupplierCorporateGroup;
            this.SupplierProcurementBlock = pSupplierProcurementBlock;
            this.TaxNumber1 = pTaxNumber1;
            this.TaxNumber2 = pTaxNumber2;
            this.TaxNumber3 = pTaxNumber3;
            this.TaxNumber4 = pTaxNumber4;
            this.TaxNumber5 = pTaxNumber5;
        }
    }

    public class A_SupplierCompany {
        @AuraEnabled public String Supplier { get; set; }
        @AuraEnabled public String CompanyCode { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        @AuraEnabled public String CompanyCodeName { get; set; }
        @AuraEnabled public String PaymentBlockingReason { get; set; }
        @AuraEnabled public Boolean SupplierIsBlockedForPosting { get; set; }
        @AuraEnabled public String AccountingClerk { get; set; }
        @AuraEnabled public String AccountingClerkFaxNumber { get; set; }
        @AuraEnabled public String AccountingClerkPhoneNumber { get; set; }
        @AuraEnabled public String SupplierClerk { get; set; }
        @AuraEnabled public String SupplierClerkURL { get; set; }
        @AuraEnabled public String PaymentMethodsList { get; set; }
        @AuraEnabled public String PaymentTerms { get; set; }
        @AuraEnabled public Boolean ClearCustomerSupplier { get; set; }
        @AuraEnabled public Boolean IsToBeLocallyProcessed { get; set; }
        @AuraEnabled public Boolean ItemIsToBePaidSeparately { get; set; }
        @AuraEnabled public Boolean PaymentIsToBeSentByEDI { get; set; }
        @AuraEnabled public String HouseBank { get; set; }
        @AuraEnabled public Decimal CheckPaidDurationInDays { get; set; }
        @AuraEnabled public String Currency_x { get; set; }
        @AuraEnabled public Decimal BillOfExchLmtAmtInCoCodeCrcy { get; set; }
        @AuraEnabled public String SupplierClerkIDBySupplier { get; set; }
        @AuraEnabled public String ReconciliationAccount { get; set; }
        @AuraEnabled public String InterestCalculationCode { get; set; }
        @AuraEnabled public Datetime InterestCalculationDate { get; set; }
        @AuraEnabled public String IntrstCalcFrequencyInMonths { get; set; }
        @AuraEnabled public String SupplierHeadOffice { get; set; }
        @AuraEnabled public String AlternativePayee { get; set; }
        @AuraEnabled public String LayoutSortingRule { get; set; }
        @AuraEnabled public String APARToleranceGroup { get; set; }
        @AuraEnabled public Datetime SupplierCertificationDate { get; set; }
        @AuraEnabled public String SupplierAccountNote { get; set; }
        @AuraEnabled public String WithholdingTaxCountry { get; set; }
        @AuraEnabled public Boolean DeletionIndicator { get; set; }
        @AuraEnabled public String CashPlanningGroup { get; set; }
        @AuraEnabled public Boolean IsToBeCheckedForDuplicates { get; set; }
        @AuraEnabled public String MinorityGroup { get; set; }
        @AuraEnabled public String SupplierAccountGroup { get; set; }
        /**
        * Navigation property to A_SupplierCompanyText.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_CompanyText { get; set; }
        /**
        * Navigation property to A_Supplier.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_Supplier { get; set; }
        /**
        * Navigation property to A_SupplierDunning.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_SupplierDunning { get; set; }
        /**
        * Navigation property to A_SupplierWithHoldingTax.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_SupplierWithHoldingTax { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_SupplierCompany() {}

        public A_SupplierCompany(String pSupplier, String pCompanyCode, String pAuthorizationGroup, String pCompanyCodeName, String pPaymentBlockingReason, Boolean pSupplierIsBlockedForPosting, String pAccountingClerk, String pAccountingClerkFaxNumber, String pAccountingClerkPhoneNumber, String pSupplierClerk, String pSupplierClerkURL, String pPaymentMethodsList, String pPaymentTerms, Boolean pClearCustomerSupplier, Boolean pIsToBeLocallyProcessed, Boolean pItemIsToBePaidSeparately, Boolean pPaymentIsToBeSentByEDI, String pHouseBank, Decimal pCheckPaidDurationInDays, String pCurrency_x, Decimal pBillOfExchLmtAmtInCoCodeCrcy, String pSupplierClerkIDBySupplier, String pReconciliationAccount, String pInterestCalculationCode, Datetime pInterestCalculationDate, String pIntrstCalcFrequencyInMonths, String pSupplierHeadOffice, String pAlternativePayee, String pLayoutSortingRule, String pAPARToleranceGroup, Datetime pSupplierCertificationDate, String pSupplierAccountNote) {
            this.Supplier = pSupplier;
            this.CompanyCode = pCompanyCode;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.CompanyCodeName = pCompanyCodeName;
            this.PaymentBlockingReason = pPaymentBlockingReason;
            this.SupplierIsBlockedForPosting = pSupplierIsBlockedForPosting;
            this.AccountingClerk = pAccountingClerk;
            this.AccountingClerkFaxNumber = pAccountingClerkFaxNumber;
            this.AccountingClerkPhoneNumber = pAccountingClerkPhoneNumber;
            this.SupplierClerk = pSupplierClerk;
            this.SupplierClerkURL = pSupplierClerkURL;
            this.PaymentMethodsList = pPaymentMethodsList;
            this.PaymentTerms = pPaymentTerms;
            this.ClearCustomerSupplier = pClearCustomerSupplier;
            this.IsToBeLocallyProcessed = pIsToBeLocallyProcessed;
            this.ItemIsToBePaidSeparately = pItemIsToBePaidSeparately;
            this.PaymentIsToBeSentByEDI = pPaymentIsToBeSentByEDI;
            this.HouseBank = pHouseBank;
            this.CheckPaidDurationInDays = pCheckPaidDurationInDays;
            this.Currency_x = pCurrency_x;
            this.BillOfExchLmtAmtInCoCodeCrcy = pBillOfExchLmtAmtInCoCodeCrcy;
            this.SupplierClerkIDBySupplier = pSupplierClerkIDBySupplier;
            this.ReconciliationAccount = pReconciliationAccount;
            this.InterestCalculationCode = pInterestCalculationCode;
            this.InterestCalculationDate = pInterestCalculationDate;
            this.IntrstCalcFrequencyInMonths = pIntrstCalcFrequencyInMonths;
            this.SupplierHeadOffice = pSupplierHeadOffice;
            this.AlternativePayee = pAlternativePayee;
            this.LayoutSortingRule = pLayoutSortingRule;
            this.APARToleranceGroup = pAPARToleranceGroup;
            this.SupplierCertificationDate = pSupplierCertificationDate;
            this.SupplierAccountNote = pSupplierAccountNote;
        }
    }

    public class A_SupplierCompanyText {
        @AuraEnabled public String Supplier { get; set; }
        @AuraEnabled public String CompanyCode { get; set; }
        @AuraEnabled public String Language { get; set; }
        @AuraEnabled public String LongTextID { get; set; }
        @AuraEnabled public String LongText { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_SupplierCompanyText() {}

        public A_SupplierCompanyText(String pSupplier, String pCompanyCode, String pLanguage, String pLongTextID, String pLongText, String pOVC_FKEY) {
            this.Supplier = pSupplier;
            this.CompanyCode = pCompanyCode;
            this.Language = pLanguage;
            this.LongTextID = pLongTextID;
            this.LongText = pLongText;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_SupplierDunning {
        @AuraEnabled public String Supplier { get; set; }
        @AuraEnabled public String CompanyCode { get; set; }
        @AuraEnabled public String DunningArea { get; set; }
        @AuraEnabled public String DunningBlock { get; set; }
        @AuraEnabled public String DunningLevel { get; set; }
        @AuraEnabled public String DunningProcedure { get; set; }
        @AuraEnabled public String DunningRecipient { get; set; }
        @AuraEnabled public Datetime LastDunnedOn { get; set; }
        @AuraEnabled public Datetime LegDunningProcedureOn { get; set; }
        @AuraEnabled public String DunningClerk { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        @AuraEnabled public String SupplierAccountGroup { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_SupplierDunning() {}

        public A_SupplierDunning(String pSupplier, String pCompanyCode, String pDunningArea, String pDunningBlock, String pDunningLevel, String pDunningProcedure, String pDunningRecipient, Datetime pLastDunnedOn, Datetime pLegDunningProcedureOn, String pDunningClerk, String pAuthorizationGroup, String pSupplierAccountGroup, String pOVC_FKEY) {
            this.Supplier = pSupplier;
            this.CompanyCode = pCompanyCode;
            this.DunningArea = pDunningArea;
            this.DunningBlock = pDunningBlock;
            this.DunningLevel = pDunningLevel;
            this.DunningProcedure = pDunningProcedure;
            this.DunningRecipient = pDunningRecipient;
            this.LastDunnedOn = pLastDunnedOn;
            this.LegDunningProcedureOn = pLegDunningProcedureOn;
            this.DunningClerk = pDunningClerk;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.SupplierAccountGroup = pSupplierAccountGroup;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_SupplierWithHoldingTax {
        @AuraEnabled public String Supplier { get; set; }
        @AuraEnabled public String CompanyCode { get; set; }
        @AuraEnabled public String WithholdingTaxType { get; set; }
        @AuraEnabled public Datetime ExemptionDateBegin { get; set; }
        @AuraEnabled public Datetime ExemptionDateEnd { get; set; }
        @AuraEnabled public String ExemptionReason { get; set; }
        @AuraEnabled public Boolean IsWithholdingTaxSubject { get; set; }
        @AuraEnabled public String RecipientType { get; set; }
        @AuraEnabled public String WithholdingTaxCertificate { get; set; }
        @AuraEnabled public String WithholdingTaxCode { get; set; }
        @AuraEnabled public Decimal WithholdingTaxExmptPercent { get; set; }
        @AuraEnabled public String WithholdingTaxNumber { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_SupplierWithHoldingTax() {}

        public A_SupplierWithHoldingTax(String pSupplier, String pCompanyCode, String pWithholdingTaxType, Datetime pExemptionDateBegin, Datetime pExemptionDateEnd, String pExemptionReason, Boolean pIsWithholdingTaxSubject, String pRecipientType, String pWithholdingTaxCertificate, String pWithholdingTaxCode, Decimal pWithholdingTaxExmptPercent, String pWithholdingTaxNumber, String pAuthorizationGroup, String pOVC_FKEY) {
            this.Supplier = pSupplier;
            this.CompanyCode = pCompanyCode;
            this.WithholdingTaxType = pWithholdingTaxType;
            this.ExemptionDateBegin = pExemptionDateBegin;
            this.ExemptionDateEnd = pExemptionDateEnd;
            this.ExemptionReason = pExemptionReason;
            this.IsWithholdingTaxSubject = pIsWithholdingTaxSubject;
            this.RecipientType = pRecipientType;
            this.WithholdingTaxCertificate = pWithholdingTaxCertificate;
            this.WithholdingTaxCode = pWithholdingTaxCode;
            this.WithholdingTaxExmptPercent = pWithholdingTaxExmptPercent;
            this.WithholdingTaxNumber = pWithholdingTaxNumber;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_SupplierPurchasingOrg {
        @AuraEnabled public String Supplier { get; set; }
        @AuraEnabled public String PurchasingOrganization { get; set; }
        @AuraEnabled public String CalculationSchemaGroupCode { get; set; }
        @AuraEnabled public Boolean DeletionIndicator { get; set; }
        @AuraEnabled public String IncotermsClassification { get; set; }
        @AuraEnabled public String IncotermsTransferLocation { get; set; }
        @AuraEnabled public String IncotermsVersion { get; set; }
        @AuraEnabled public String IncotermsLocation1 { get; set; }
        @AuraEnabled public String IncotermsLocation2 { get; set; }
        @AuraEnabled public Boolean InvoiceIsGoodsReceiptBased { get; set; }
        @AuraEnabled public Decimal MaterialPlannedDeliveryDurn { get; set; }
        @AuraEnabled public Decimal MinimumOrderAmount { get; set; }
        @AuraEnabled public String PaymentTerms { get; set; }
        @AuraEnabled public String PricingDateControl { get; set; }
        @AuraEnabled public Boolean PurOrdAutoGenerationIsAllowed { get; set; }
        @AuraEnabled public String PurchaseOrderCurrency { get; set; }
        @AuraEnabled public String PurchasingGroup { get; set; }
        @AuraEnabled public Boolean PurchasingIsBlockedForSupplier { get; set; }
        @AuraEnabled public String ShippingCondition { get; set; }
        @AuraEnabled public String SupplierABCClassificationCode { get; set; }
        @AuraEnabled public String SupplierPhoneNumber { get; set; }
        @AuraEnabled public String SupplierRespSalesPersonName { get; set; }
        @AuraEnabled public String SupplierConfirmationControlKey { get; set; }
        @AuraEnabled public Boolean IsOrderAcknRqd { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        @AuraEnabled public String SupplierAccountGroup { get; set; }
        /**
        * Navigation property to A_SupplierPartnerFunc.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_PartnerFunction { get; set; }
        /**
        * Navigation property to A_SupplierPurchasingOrgText.OVC_FKEY.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String to_PurchasingOrgText { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_SupplierPurchasingOrg() {}

        public A_SupplierPurchasingOrg(String pSupplier, String pPurchasingOrganization, String pCalculationSchemaGroupCode, Boolean pDeletionIndicator, String pIncotermsClassification, String pIncotermsTransferLocation, String pIncotermsVersion, String pIncotermsLocation1, String pIncotermsLocation2, Boolean pInvoiceIsGoodsReceiptBased, Decimal pMaterialPlannedDeliveryDurn, Decimal pMinimumOrderAmount, String pPaymentTerms, String pPricingDateControl, Boolean pPurOrdAutoGenerationIsAllowed, String pPurchaseOrderCurrency, String pPurchasingGroup, Boolean pPurchasingIsBlockedForSupplier, String pShippingCondition, String pSupplierABCClassificationCode, String pSupplierPhoneNumber, String pSupplierRespSalesPersonName, String pSupplierConfirmationControlKey, Boolean pIsOrderAcknRqd, String pAuthorizationGroup, String pSupplierAccountGroup, String pto_PartnerFunction, String pto_PurchasingOrgText, String pOVC_FKEY) {
            this.Supplier = pSupplier;
            this.PurchasingOrganization = pPurchasingOrganization;
            this.CalculationSchemaGroupCode = pCalculationSchemaGroupCode;
            this.DeletionIndicator = pDeletionIndicator;
            this.IncotermsClassification = pIncotermsClassification;
            this.IncotermsTransferLocation = pIncotermsTransferLocation;
            this.IncotermsVersion = pIncotermsVersion;
            this.IncotermsLocation1 = pIncotermsLocation1;
            this.IncotermsLocation2 = pIncotermsLocation2;
            this.InvoiceIsGoodsReceiptBased = pInvoiceIsGoodsReceiptBased;
            this.MaterialPlannedDeliveryDurn = pMaterialPlannedDeliveryDurn;
            this.MinimumOrderAmount = pMinimumOrderAmount;
            this.PaymentTerms = pPaymentTerms;
            this.PricingDateControl = pPricingDateControl;
            this.PurOrdAutoGenerationIsAllowed = pPurOrdAutoGenerationIsAllowed;
            this.PurchaseOrderCurrency = pPurchaseOrderCurrency;
            this.PurchasingGroup = pPurchasingGroup;
            this.PurchasingIsBlockedForSupplier = pPurchasingIsBlockedForSupplier;
            this.ShippingCondition = pShippingCondition;
            this.SupplierABCClassificationCode = pSupplierABCClassificationCode;
            this.SupplierPhoneNumber = pSupplierPhoneNumber;
            this.SupplierRespSalesPersonName = pSupplierRespSalesPersonName;
            this.SupplierConfirmationControlKey = pSupplierConfirmationControlKey;
            this.IsOrderAcknRqd = pIsOrderAcknRqd;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.SupplierAccountGroup = pSupplierAccountGroup;
            this.to_PartnerFunction = pto_PartnerFunction;
            this.to_PurchasingOrgText = pto_PurchasingOrgText;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_SupplierPartnerFunc {
        @AuraEnabled public String Supplier { get; set; }
        @AuraEnabled public String PurchasingOrganization { get; set; }
        @AuraEnabled public String SupplierSubrange { get; set; }
        @AuraEnabled public String Plant { get; set; }
        @AuraEnabled public String PartnerFunction { get; set; }
        @AuraEnabled public String PartnerCounter { get; set; }
        @AuraEnabled public Boolean DefaultPartner { get; set; }
        @AuraEnabled public Datetime CreationDate { get; set; }
        @AuraEnabled public String CreatedByUser { get; set; }
        @AuraEnabled public String ReferenceSupplier { get; set; }
        @AuraEnabled public String AuthorizationGroup { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_SupplierPartnerFunc() {}

        public A_SupplierPartnerFunc(String pSupplier, String pPurchasingOrganization, String pSupplierSubrange, String pPlant, String pPartnerFunction, String pPartnerCounter, Boolean pDefaultPartner, Datetime pCreationDate, String pCreatedByUser, String pReferenceSupplier, String pAuthorizationGroup, String pOVC_FKEY) {
            this.Supplier = pSupplier;
            this.PurchasingOrganization = pPurchasingOrganization;
            this.SupplierSubrange = pSupplierSubrange;
            this.Plant = pPlant;
            this.PartnerFunction = pPartnerFunction;
            this.PartnerCounter = pPartnerCounter;
            this.DefaultPartner = pDefaultPartner;
            this.CreationDate = pCreationDate;
            this.CreatedByUser = pCreatedByUser;
            this.ReferenceSupplier = pReferenceSupplier;
            this.AuthorizationGroup = pAuthorizationGroup;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_SupplierPurchasingOrgText {
        @AuraEnabled public String Supplier { get; set; }
        @AuraEnabled public String PurchasingOrganization { get; set; }
        @AuraEnabled public String Language { get; set; }
        @AuraEnabled public String LongTextID { get; set; }
        @AuraEnabled public String LongText { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_SupplierPurchasingOrgText() {}

        public A_SupplierPurchasingOrgText(String pSupplier, String pPurchasingOrganization, String pLanguage, String pLongTextID, String pLongText, String pOVC_FKEY) {
            this.Supplier = pSupplier;
            this.PurchasingOrganization = pPurchasingOrganization;
            this.Language = pLanguage;
            this.LongTextID = pLongTextID;
            this.LongText = pLongText;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    public class A_SupplierText {
        @AuraEnabled public String Supplier { get; set; }
        @AuraEnabled public String Language { get; set; }
        @AuraEnabled public String LongTextID { get; set; }
        @AuraEnabled public String LongText { get; set; }
        /**
        * Association property to the principal end's (parent's) navigation property.
        * It can be used for the case that primary key fields are not generated yet at runInsert().
        */
        @AuraEnabled public String OVC_FKEY { get; set; }

        public A_SupplierText() {}

        public A_SupplierText(String pSupplier, String pLanguage, String pLongTextID, String pLongText, String pOVC_FKEY) {
            this.Supplier = pSupplier;
            this.Language = pLanguage;
            this.LongTextID = pLongTextID;
            this.LongText = pLongText;
            this.OVC_FKEY = pOVC_FKEY;
        }
    }

    @AuraEnabled public list<zjcTestOData.A_BusinessPartner> A_BusinessPartner { get; set; }
    @AuraEnabled public list<zjcTestOData.A_BuPaIdentification> A_BuPaIdentification { get; set; }
    @AuraEnabled public list<zjcTestOData.A_BuPaIndustry> A_BuPaIndustry { get; set; }
    @AuraEnabled public list<zjcTestOData.A_BusinessPartnerAddress> A_BusinessPartnerAddress { get; set; }
    @AuraEnabled public list<zjcTestOData.A_BuPaAddressUsage> A_BuPaAddressUsage { get; set; }
    @AuraEnabled public list<zjcTestOData.A_AddressEmailAddress> A_AddressEmailAddress { get; set; }
    @AuraEnabled public list<zjcTestOData.A_AddressFaxNumber> A_AddressFaxNumber { get; set; }
    @AuraEnabled public list<zjcTestOData.A_AddressPhoneNumber> A_AddressPhoneNumber { get; set; }
    @AuraEnabled public list<zjcTestOData.A_AddressHomePageURL> A_AddressHomePageURL { get; set; }
    @AuraEnabled public list<zjcTestOData.A_BusinessPartnerBank> A_BusinessPartnerBank { get; set; }
    @AuraEnabled public list<zjcTestOData.A_BusinessPartnerContact> A_BusinessPartnerContact { get; set; }
    @AuraEnabled public list<zjcTestOData.A_BPContactToAddress> A_BPContactToAddress { get; set; }
    @AuraEnabled public list<zjcTestOData.A_BPContactToFuncAndDept> A_BPContactToFuncAndDept { get; set; }
    @AuraEnabled public list<zjcTestOData.A_BusinessPartnerRole> A_BusinessPartnerRole { get; set; }
    @AuraEnabled public list<zjcTestOData.A_BusinessPartnerTaxNumber> A_BusinessPartnerTaxNumber { get; set; }
    @AuraEnabled public list<zjcTestOData.A_Customer> A_Customer { get; set; }
    @AuraEnabled public list<zjcTestOData.A_CustomerCompany> A_CustomerCompany { get; set; }
    @AuraEnabled public list<zjcTestOData.A_CustomerCompanyText> A_CustomerCompanyText { get; set; }
    @AuraEnabled public list<zjcTestOData.A_CustomerDunning> A_CustomerDunning { get; set; }
    @AuraEnabled public list<zjcTestOData.A_CustomerWithHoldingTax> A_CustomerWithHoldingTax { get; set; }
    @AuraEnabled public list<zjcTestOData.A_CustomerSalesArea> A_CustomerSalesArea { get; set; }
    @AuraEnabled public list<zjcTestOData.A_CustSalesPartnerFunc> A_CustSalesPartnerFunc { get; set; }
    @AuraEnabled public list<zjcTestOData.A_CustomerSalesAreaTax> A_CustomerSalesAreaTax { get; set; }
    @AuraEnabled public list<zjcTestOData.A_CustomerSalesAreaText> A_CustomerSalesAreaText { get; set; }
    @AuraEnabled public list<zjcTestOData.A_CustomerTaxGrouping> A_CustomerTaxGrouping { get; set; }
    @AuraEnabled public list<zjcTestOData.A_CustomerText> A_CustomerText { get; set; }
    @AuraEnabled public list<zjcTestOData.A_Supplier> A_Supplier { get; set; }
    @AuraEnabled public list<zjcTestOData.A_SupplierCompany> A_SupplierCompany { get; set; }
    @AuraEnabled public list<zjcTestOData.A_SupplierCompanyText> A_SupplierCompanyText { get; set; }
    @AuraEnabled public list<zjcTestOData.A_SupplierDunning> A_SupplierDunning { get; set; }
    @AuraEnabled public list<zjcTestOData.A_SupplierWithHoldingTax> A_SupplierWithHoldingTax { get; set; }
    @AuraEnabled public list<zjcTestOData.A_SupplierPurchasingOrg> A_SupplierPurchasingOrg { get; set; }
    @AuraEnabled public list<zjcTestOData.A_SupplierPartnerFunc> A_SupplierPartnerFunc { get; set; }
    @AuraEnabled public list<zjcTestOData.A_SupplierPurchasingOrgText> A_SupplierPurchasingOrgText { get; set; }
    @AuraEnabled public list<zjcTestOData.A_SupplierText> A_SupplierText { get; set; }

    public string inputSetName { get; set; }

    public zjcTestOData runQuery(overcast.Query query) {
        overcast.Logger logger1 = createLogger();
        try {
            zjcTestOData response = this.runQuery(query, logger1, null);
            logger1.commitToDatabase();
            return response;
        }
        catch (Exception e) {
            logger1.addLog('ERROR', e.getTypeName() + ': ' + e.getMessage());
            logger1.setStatusCode(300);
            logger1.commitToDatabase();
            throw e;
        }
    }

    public zjcTestOData runQuery(overcast.Query query, overcast.Logger logger, string namedCredential) {
        return run(overcast.SynchronousHandler.OperationType.EpgwSelect, query, logger, namedCredential);
    }

    public string runQueryAsync(overcast.Query query, overcast.Logger logger, string namedCredential, Continuation con) {
        return runAsync(overcast.SynchronousHandler.OperationType.EpgwSelect, query, logger, namedCredential, con);
    }

    public zjcTestOData runInsert() {
        overcast.Logger logger1 = createLogger();
        try {
            zjcTestOData response = this.runInsert(logger1, null);
            logger1.commitToDatabase();
            return response;
        }
        catch (Exception e) {
            logger1.addLog('ERROR', e.getTypeName() + ': ' + e.getMessage());
            logger1.setStatusCode(300);
            logger1.commitToDatabase();
            throw e;
        }
    }

    public zjcTestOData runInsert(overcast.Logger logger, string namedCredential) {
        return run(overcast.SynchronousHandler.OperationType.EpgwCreate, null, logger, namedCredential);
    }
    
    public string runInsertAsync(overcast.Logger logger, string namedCredential, Continuation con) {
        return runAsync(overcast.SynchronousHandler.OperationType.EpgwCreate, null, logger, namedCredential, con);
    }

    public zjcTestOData runUpdate() {
        overcast.Logger logger1 = createLogger();
        try {
            zjcTestOData response = this.runUpdate(logger1, null);
            logger1.commitToDatabase();
            return response;
        }
        catch (Exception e) {
            logger1.addLog('ERROR', e.getTypeName() + ': ' + e.getMessage());
            logger1.setStatusCode(300);
            logger1.commitToDatabase();
            throw e;
        }
    }

    public zjcTestOData runUpdate(overcast.Logger logger, string namedCredential) {
        return run(overcast.SynchronousHandler.OperationType.EpgwUpdate, null, logger, namedCredential);
    }
    
    public string runUpdateAsync(overcast.Logger logger, string namedCredential, Continuation con) {
        return runAsync(overcast.SynchronousHandler.OperationType.EpgwUpdate, null, logger, namedCredential, con);
    }

    public zjcTestOData runDelete() {
        overcast.Logger logger1 = createLogger();
        try {
            zjcTestOData response = this.runDelete(logger1, null);
            logger1.commitToDatabase();
            return response;
        }
        catch (Exception e) {
            logger1.addLog('ERROR', e.getTypeName() + ': ' + e.getMessage());
            logger1.setStatusCode(300);
            logger1.commitToDatabase();
            throw e;
        }
    }
    
    public zjcTestOData runDelete(overcast.Logger logger, string namedCredential) {
        return run(overcast.SynchronousHandler.OperationType.EpgwDelete, null, logger, namedCredential);
    }
    
    public string runDeleteAsync(overcast.Logger logger, string namedCredential, Continuation con) {
        return runAsync(overcast.SynchronousHandler.OperationType.EpgwDelete, null, logger, namedCredential, con);
    }

    public static zjcTestOData getAsyncResponse(String requestLabel) {
        HttpResponse response = Continuation.getResponse(requestLabel);
        return zjcTestOData.deserialize(response.getBody());
    }

    private overcast.SynchronousHandler setup(overcast.SynchronousHandler.OperationType operation, overcast.Query query, overcast.Logger logger, string namedCredential) {
        overcast.SynchronousHandler sh = overcast.SynchronousHandler.CreateFromName('zjcTestOData');
        sh.InputSetName = this.inputSetName;
        sh.InputJson = this.serialize();
        sh.NamedCredential = namedCredential;
        if (logger != null) {
            logger.setInputSetName(String.isBlank(this.inputSetName) ? sh.CorrelationId : this.inputSetName);
            logger.setIdemId(sh.CorrelationId);
        }
        sh.Operation = operation;

        if (query != null) {
            sh.Condition = query.where_x;
            sh.OrderBy = query.orderBy;
            sh.Fields = query.fields;
            sh.Limit_x = query.limit_x;
            sh.Offset = query.offset;
        }
        return sh;
    }
    
    private zjcTestOData run(overcast.SynchronousHandler.OperationType operation, overcast.Query query, overcast.Logger logger, string namedCredential) {
        overcast.SynchronousHandler sh = setup(operation, query, logger, namedCredential);

        if (Test.isRunningTest()) {
            if (this.dynamicBody != null) {
                return this;
            }
            return zjcTestOData.deserialize(this.testResponse);
        }
        overcast.EpgwController.ExecuteScenarioSynchronously(sh, logger);

        return zjcTestOData.deserialize(sh.Response);
    }

    private string runAsync(overcast.SynchronousHandler.OperationType operation, overcast.Query query, overcast.Logger logger, string namedCredential, Continuation con) {
        overcast.SynchronousHandler sh = setup(operation, query, logger, namedCredential);

        sh.ContinuationWebRequest = new HttpRequest();

        overcast.EpgwController.ExecuteScenarioSynchronously(sh, logger);

        return con.addHttpRequest(sh.ContinuationWebRequest);
    }
        

    private static overcast.Logger createLogger() {
        return new overcast.Logger('zjcTestOData');
    }

    global override string getBackendMessage() {
        return this.backendMessage;
    }

    global string serialize() {
        if (dynamicBody != null) {
            return JSON.serialize(dynamicBody, true);
        }
        return JSON.serialize(this, true);
    }
    
    public static zjcTestOData deserialize(string responsedata) {
        if (overcast.Globals.IsOCF) {
            zjcTestOData obj = new zjcTestOData();
            obj.loadAsyncResponse(responsedata);
            return obj;
        }
        map<string, string> m = getOutputData(responsedata);
        string outputData = m.get('output');
        string backendMessage = m.get('backendMessage');
        if (outputData == null) {
            return new zjcTestOData();
        }
        zjcTestOData obj = (zjcTestOData)JSON.deserialize(outputData, zjcTestOData.class);
        obj.outputData = outputData;
        obj.backendMessage = backendMessage;

        return obj;
    }

    private static map<string, string> getOutputData(string responseData) {
        if (string.isblank(responsedata)) {
            throw new zjcTestODataException('Response null for zjcTestOData request.');
        }

        map<string, string> m = new map<string, string>();

        JSONParser jresponse = JSON.createParser(responsedata);
        jresponse.nextValue();

        boolean hasOutput = false;
        while (jresponse.nextValue() != JSONToken.END_OBJECT && jresponse.getCurrentToken() != null) {
            if (jresponse.getCurrentName() == 'output') {
                jresponse.skipChildren();
                hasOutput = true;
                continue;
            }
            if (jresponse.getCurrentName() == 'backendMessage') {
                m.put('backendMessage', (string)jresponse.readValueAs(string.class));
                continue;
            }
            if (jresponse.getCurrentName() == 'error') {
                string[] errors = (string[])jresponse.readValueAs(list<string>.class);
                zjcTestODataException ex = new zjcTestODataException(string.join(errors, ';'));
                ex.setMessages(errors);
                throw ex;
            }
        }
        if (!hasOutput) {
            throw new zjcTestODataException('Malformed response for zjcTestOData request.');
        }
        integer start = responsedata.indexOf(':') + 1;
        integer lastIndex = m.get('backendMessage') == null
            ? responsedata.length() - 2
            : responsedata.lastIndexOf('backendMessage');
        integer finish = responsedata.lastIndexOf('}', lastIndex) + 1;
        m.put('output', responseData.substring(start, finish));
        return m;
    }


    public transient string testResponse;
    private transient string outputData;
    private transient string backendMessage;

    private transient map<string, overcast.TypeInfo> metadata;
    private transient map<string, object> dynamicBody;

    global void loadAsyncResponse(string responseBody) {
        if (overcast.Globals.IsOCF) {
            if (string.isblank(responseBody)) {
                throw new zjcTestODataException('Response null for zjcTestOData request.');
            }
            map<string, object> responseObj = (map<string, object>)JSON.deserializeUntyped(responseBody);
            if (responseObj.containsKey('error')) {
                object[] errors = (object[])responseObj.get('error');
                throw new zjcTestODataException(string.join(errors, ';'));
            }
            backendMessage = (string)responseObj.get('backendMessage');
            dynamicBody = (map<string, object>)responseObj.get('output');
            return;
        }

        map<string, string> m = getOutputData(responseBody);
        outputData = m.get('output');
        backendMessage = m.get('backendMessage');
        
        if (outputData != null) {
            dynamicBody = (map<string, object>)JSON.deserializeUntyped(outputData);
        }
    }

    global string getTopTypeName() {
        return 'A_BusinessPartner';
    }

    global void set(string typeName, object records) {
        if (typeName == '@testResponse') {
            dynamicBody = (map<string, object>)records;
            return;
        }
        if (dynamicBody == null) {
            dynamicBody = new map<string, object>();
        }
        
        dynamicBody.put(typeName, records);
    }
    
    global object get(string typeName) {
        if (dynamicBody == null && outputData != null) {
            dynamicBody = (map<string, object>)JSON.deserializeUntyped(outputData);
        }
        if (dynamicBody == null) { 
            return null;
        }
        return dynamicBody.get(typeName);
    }

    global map<string, overcast.TypeInfo> getMetadata() {
        if (metadata == null) {
            metadata = new Map<String, overcast.TypeInfo>();
            metadata.putAll(zjcTestODataMeta0.metadata);
        }
        return metadata;
    }

}